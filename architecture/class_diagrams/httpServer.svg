<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1236px" preserveAspectRatio="none" style="width:1226px;height:1236px;" version="1.1" viewBox="0 0 1226 1236" width="1226px" zoomAndPan="magnify"><defs><filter height="300%" id="fe6jeggvlzi3j" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster butterfly--><polygon fill="#DDDDDD" filter="url(#fe6jeggvlzi3j)" points="22,24,96,24,103,46.2969,1204,46.2969,1204,1224,22,1224,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="103" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="68" x="26" y="38.9951">butterfly</text><!--class Socket--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="278.4844" id="Socket" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="699.5" y="59"/><ellipse cx="870.25" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M873.2188,80.6406 Q872.6406,80.9375 872,81.0781 Q871.3594,81.2344 870.6563,81.2344 Q868.1563,81.2344 866.8281,79.5938 Q865.5156,77.9375 865.5156,74.8125 Q865.5156,71.6875 866.8281,70.0313 Q868.1563,68.375 870.6563,68.375 Q871.3594,68.375 872,68.5313 Q872.6563,68.6875 873.2188,68.9844 L873.2188,71.7031 Q872.5938,71.125 872,70.8594 Q871.4063,70.5781 870.7813,70.5781 Q869.4375,70.5781 868.75,71.6563 Q868.0625,72.7188 868.0625,74.8125 Q868.0625,76.9063 868.75,77.9844 Q869.4375,79.0469 870.7813,79.0469 Q871.4063,79.0469 872,78.7813 Q872.5938,78.5 873.2188,77.9219 L873.2188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="890.75" y="79.1543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="700.5" x2="1091.5" y1="91" y2="91"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="707.5" y="99.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="719.5" y="105.2104">_socketDomain, _socketType, _socketProtocol: int</text><polygon fill="none" points="710.5,110.707,714.5,114.707,710.5,118.707,706.5,114.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="719.5" y="118.0151">_fd: int</text><polygon fill="none" points="710.5,123.5117,714.5,127.5117,710.5,131.5117,706.5,127.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="719.5" y="130.8198">_addr: sockaddr_in</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="700.5" x2="1091.5" y1="137.4141" y2="137.4141"/><ellipse cx="710.5" cy="149.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="719.5" y="151.6245">Socket(int domain, int type, int protocol)</text><ellipse cx="710.5" cy="162.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="719.5" y="164.4292">Socket(int fileDescriptor, int domain, int type, int protocol)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="723.5" y="177.2339"/><ellipse cx="710.5" cy="187.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="719.5" y="190.0386">getFileDescriptor() const: int</text><ellipse cx="710.5" cy="200.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="719.5" y="202.8433">shutdown() const: bool</text><ellipse cx="710.5" cy="213.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="719.5" y="215.6479">setOptions() const: bool</text><ellipse cx="710.5" cy="226.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="719.5" y="228.4526">setBlocking() const: bool</text><ellipse cx="710.5" cy="238.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="719.5" y="241.2573">setNonBlocking() const: bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="723.5" y="254.062"/><ellipse cx="710.5" cy="264.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="719.5" y="266.8667">bind(unsigned int port): bool</text><ellipse cx="710.5" cy="277.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="719.5" y="279.6714">listen() const: bool</text><ellipse cx="710.5" cy="290.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="719.5" y="292.4761">accept(): std::shared_ptr&lt;Socket&gt;</text><ellipse cx="710.5" cy="302.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="719.5" y="305.2808">connect(const std::string&amp; host, const int port): bool</text><ellipse cx="710.5" cy="315.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="719.5" y="318.0854">disconnect() const: bool</text><ellipse cx="710.5" cy="328.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="719.5" y="330.8901">hostnameToIP(const std::string &amp;hostname, std::string &amp;ip): int</text><!--class TCPSocket--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="137.6328" id="TCPSocket" style="stroke: #A80036; stroke-width: 1.5;" width="247" x="772.5" y="398"/><ellipse cx="858.75" cy="414" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M861.7188,419.6406 Q861.1406,419.9375 860.5,420.0781 Q859.8594,420.2344 859.1563,420.2344 Q856.6563,420.2344 855.3281,418.5938 Q854.0156,416.9375 854.0156,413.8125 Q854.0156,410.6875 855.3281,409.0313 Q856.6563,407.375 859.1563,407.375 Q859.8594,407.375 860.5,407.5313 Q861.1563,407.6875 861.7188,407.9844 L861.7188,410.7031 Q861.0938,410.125 860.5,409.8594 Q859.9063,409.5781 859.2813,409.5781 Q857.9375,409.5781 857.25,410.6563 Q856.5625,411.7188 856.5625,413.8125 Q856.5625,415.9063 857.25,416.9844 Q857.9375,418.0469 859.2813,418.0469 Q859.9063,418.0469 860.5,417.7813 Q861.0938,417.5 861.7188,416.9219 L861.7188,419.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="879.25" y="418.1543">TCPSocket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="773.5" x2="1018.5" y1="430" y2="430"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="773.5" x2="1018.5" y1="438" y2="438"/><ellipse cx="783.5" cy="449.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="792.5" y="452.2104">TCPSocket()</text><ellipse cx="783.5" cy="462.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="792.5" y="465.0151">TCPSocket(int fileDescriptor)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="796.5" y="477.8198"/><ellipse cx="783.5" cy="488.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="792.5" y="490.6245">accept(): std::shared_ptr&lt;TCPSocket&gt;</text><ellipse cx="783.5" cy="501.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="792.5" y="503.4292">send(const std::string&amp; s) const: bool</text><ellipse cx="783.5" cy="513.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="792.5" y="516.2339">recv(char *buf,int len) const: int</text><ellipse cx="783.5" cy="526.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="792.5" y="529.0386">recvAll(int chunkSize) const: std::string</text><!--class HTTPServer--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="304.0938" id="HTTPServer" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="607" y="613"/><ellipse cx="761.25" cy="629" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M764.2188,634.6406 Q763.6406,634.9375 763,635.0781 Q762.3594,635.2344 761.6563,635.2344 Q759.1563,635.2344 757.8281,633.5938 Q756.5156,631.9375 756.5156,628.8125 Q756.5156,625.6875 757.8281,624.0313 Q759.1563,622.375 761.6563,622.375 Q762.3594,622.375 763,622.5313 Q763.6563,622.6875 764.2188,622.9844 L764.2188,625.7031 Q763.5938,625.125 763,624.8594 Q762.4063,624.5781 761.7813,624.5781 Q760.4375,624.5781 759.75,625.6563 Q759.0625,626.7188 759.0625,628.8125 Q759.0625,630.9063 759.75,631.9844 Q760.4375,633.0469 761.7813,633.0469 Q762.4063,633.0469 763,632.7813 Q763.5938,632.5 764.2188,631.9219 L764.2188,634.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="781.75" y="633.1543">HTTPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="608" x2="994" y1="645" y2="645"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="653.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="627" y="659.2104">_port: unsigned int port</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="666.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="627" y="672.0151">_running: bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="679.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="627" y="684.8198">_TCPSocket, _newTCPSocket: std::shared_ptr&lt;TCPSocket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="692.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="627" y="697.6245">_httpRequest: std::unique_ptr&lt;HTTPRequest&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="705.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="627" y="710.4292">_httpResponse: std::unique_ptr&lt;HTTPResponse&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="717.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="627" y="723.2339">_masterPKeyCB: std::function</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="608" x2="994" y1="729.8281" y2="729.8281"/><ellipse cx="618" cy="741.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="627" y="744.0386">HTTPServer(unsigned int port)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="631" y="756.8433"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="764.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="627" y="769.6479">handleRequest(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="777.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="627" y="782.4526">recvRequest(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="789.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="627" y="795.2573">processRequest(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="802.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="627" y="808.062">sendResponse(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="815.5586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="627" y="820.8667">browserRoute(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="828.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="627" y="833.6714">masterKeyRoute(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="841.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="627" y="846.4761">successResponse(size_t statusCode): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="615" y="853.9727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="627" y="859.2808">errorResponse((size_t statusCode): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="631" y="872.0854"/><ellipse cx="618" cy="882.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="627" y="884.8901">registerMasterPKeyCB(std::function&lt;void(std::string)&gt; cb): void</text><ellipse cx="618" cy="895.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="627" y="897.6948">run(): void</text><ellipse cx="618" cy="908.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="627" y="910.4995">stop(): void</text><!--class HTTPClient--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="66.7422" id="HTTPClient" style="stroke: #A80036; stroke-width: 1.5;" width="157" x="1030.5" y="731.5"/><ellipse cx="1045.5" cy="750.4688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1048.4688,756.1094 Q1047.8906,756.4063 1047.25,756.5469 Q1046.6094,756.7031 1045.9063,756.7031 Q1043.4063,756.7031 1042.0781,755.0625 Q1040.7656,753.4063 1040.7656,750.2813 Q1040.7656,747.1563 1042.0781,745.5 Q1043.4063,743.8438 1045.9063,743.8438 Q1046.6094,743.8438 1047.25,744 Q1047.9063,744.1563 1048.4688,744.4531 L1048.4688,747.1719 Q1047.8438,746.5938 1047.25,746.3281 Q1046.6563,746.0469 1046.0313,746.0469 Q1044.6875,746.0469 1044,747.125 Q1043.3125,748.1875 1043.3125,750.2813 Q1043.3125,752.375 1044,753.4531 Q1044.6875,754.5156 1046.0313,754.5156 Q1046.6563,754.5156 1047.25,754.25 Q1047.8438,753.9688 1048.4688,753.3906 L1048.4688,756.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="129" x="1057.5" y="747.6387">«NOT IMPLEMENTED»</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="1089" y="761.6074">HTTPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1031.5" x2="1186.5" y1="769.4375" y2="769.4375"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1031.5" x2="1186.5" y1="777.4375" y2="777.4375"/><ellipse cx="1041.5" cy="789.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1050.5" y="791.6479">HTTPClient()</text><!--class HTTPMSGSchema--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="291.2891" id="HTTPMSGSchema" style="stroke: #A80036; stroke-width: 1.5;" width="534" x="38" y="619.5"/><ellipse cx="246.75" cy="635.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M249.7188,641.1406 Q249.1406,641.4375 248.5,641.5781 Q247.8594,641.7344 247.1563,641.7344 Q244.6563,641.7344 243.3281,640.0938 Q242.0156,638.4375 242.0156,635.3125 Q242.0156,632.1875 243.3281,630.5313 Q244.6563,628.875 247.1563,628.875 Q247.8594,628.875 248.5,629.0313 Q249.1563,629.1875 249.7188,629.4844 L249.7188,632.2031 Q249.0938,631.625 248.5,631.3594 Q247.9063,631.0781 247.2813,631.0781 Q245.9375,631.0781 245.25,632.1563 Q244.5625,633.2188 244.5625,635.3125 Q244.5625,637.4063 245.25,638.4844 Q245.9375,639.5469 247.2813,639.5469 Q247.9063,639.5469 248.5,639.2813 Q249.0938,639 249.7188,638.4219 L249.7188,641.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="267.25" y="639.6543">HTTPMSGSchema</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="571" y1="651.5" y2="651.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="660.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="58" y="665.7104">_data, _body, _messageType: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="673.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="58" y="678.5151">_httpMethod: Method</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="686.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="58" y="691.3198">_protocol: Protocol</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46" y="698.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="58" y="704.1245">_httpHeaders: std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="571" y1="710.7188" y2="710.7188"/><ellipse cx="49" cy="722.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="58" y="724.9292">HTTPMSGSchema(const std::string &amp;messageType)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62" y="737.7339"/><ellipse cx="49" cy="748.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="58" y="750.5386">print() const: void</text><ellipse cx="49" cy="761.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="58" y="763.3433">addHTTPData(const std::string &amp;data): void</text><ellipse cx="49" cy="773.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="58" y="776.1479">getHTTPData() const: std::string</text><ellipse cx="49" cy="786.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58" y="788.9526">setProtocol(Protocol protocol): void</text><ellipse cx="49" cy="799.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="58" y="801.7573">getProtocol() const: Protocol</text><ellipse cx="49" cy="812.2539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="58" y="814.562">addBody(const std::string &amp;body)</text><ellipse cx="49" cy="825.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="58" y="827.3667">getBody() const: std::string</text><ellipse cx="49" cy="837.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="58" y="840.1714">setHTTPHeader(const std::string &amp;headerName, const std::string &amp;headerContent): void</text><ellipse cx="49" cy="850.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="58" y="852.9761">getHTTPHeader(const std::string &amp;headerName) const: std::string</text><ellipse cx="49" cy="863.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="58" y="865.7808">getHTTPHeaderSize() const: size_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62" y="878.5854"/><ellipse cx="49" cy="889.082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="58" y="891.3901">parseIncoming() = 0: void</text><ellipse cx="49" cy="901.8867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="58" y="904.1948">prepareOutgoing() = 0: void</text><!--class HTTPRequest--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="214.4609" id="HTTPRequest" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="363" y="994"/><ellipse cx="471.25" cy="1010" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M474.2188,1015.6406 Q473.6406,1015.9375 473,1016.0781 Q472.3594,1016.2344 471.6563,1016.2344 Q469.1563,1016.2344 467.8281,1014.5938 Q466.5156,1012.9375 466.5156,1009.8125 Q466.5156,1006.6875 467.8281,1005.0313 Q469.1563,1003.375 471.6563,1003.375 Q472.3594,1003.375 473,1003.5313 Q473.6563,1003.6875 474.2188,1003.9844 L474.2188,1006.7031 Q473.5938,1006.125 473,1005.8594 Q472.4063,1005.5781 471.7813,1005.5781 Q470.4375,1005.5781 469.75,1006.6563 Q469.0625,1007.7188 469.0625,1009.8125 Q469.0625,1011.9063 469.75,1012.9844 Q470.4375,1014.0469 471.7813,1014.0469 Q472.4063,1014.0469 473,1013.7813 Q473.5938,1013.5 474.2188,1012.9219 L474.2188,1015.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="491.75" y="1014.1543">HTTPRequest</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="364" x2="670" y1="1026" y2="1026"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="371" y="1034.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="383" y="1040.2104">_url, _userAgent: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="364" x2="670" y1="1046.8047" y2="1046.8047"/><ellipse cx="374" cy="1058.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="383" y="1061.0151">HTTPRequest()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="387" y="1073.8198"/><ellipse cx="374" cy="1084.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="383" y="1086.6245">setMethod(Method &amp;method): void</text><ellipse cx="374" cy="1097.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="383" y="1099.4292">getMethod() const: Method</text><ellipse cx="374" cy="1109.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="383" y="1112.2339">setURL(const std::string &amp;url): void</text><ellipse cx="374" cy="1122.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="383" y="1125.0386">getURL() const: std::string</text><ellipse cx="374" cy="1135.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="383" y="1137.8433">setUserAgent(const std::string &amp;userAgent): void</text><ellipse cx="374" cy="1148.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="383" y="1150.6479">getUserAgent() const: std::string</text><ellipse cx="374" cy="1161.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="383" y="1163.4526">getRequestSize() const: size_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="387" y="1176.2573"/><ellipse cx="374" cy="1186.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="383" y="1189.062">parseIncoming(): void</text><ellipse cx="374" cy="1199.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="383" y="1201.8667">prepareOutgoing(): void</text><!--class HTTPResponse--><rect fill="#FEFECE" filter="url(#fe6jeggvlzi3j)" height="201.6563" id="HTTPResponse" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="706" y="1000"/><ellipse cx="788.25" cy="1016" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M791.2188,1021.6406 Q790.6406,1021.9375 790,1022.0781 Q789.3594,1022.2344 788.6563,1022.2344 Q786.1563,1022.2344 784.8281,1020.5938 Q783.5156,1018.9375 783.5156,1015.8125 Q783.5156,1012.6875 784.8281,1011.0313 Q786.1563,1009.375 788.6563,1009.375 Q789.3594,1009.375 790,1009.5313 Q790.6563,1009.6875 791.2188,1009.9844 L791.2188,1012.7031 Q790.5938,1012.125 790,1011.8594 Q789.4063,1011.5781 788.7813,1011.5781 Q787.4375,1011.5781 786.75,1012.6563 Q786.0625,1013.7188 786.0625,1015.8125 Q786.0625,1017.9063 786.75,1018.9844 Q787.4375,1020.0469 788.7813,1020.0469 Q789.4063,1020.0469 790,1019.7813 Q790.5938,1019.5 791.2188,1018.9219 L791.2188,1021.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="808.75" y="1020.1543">HTTPResponse</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="707" x2="971" y1="1032" y2="1032"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="714" y="1040.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="726" y="1046.2104">_reasonPhrase: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="714" y="1053.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="726" y="1059.0151">_statusCode: size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="707" x2="971" y1="1065.6094" y2="1065.6094"/><ellipse cx="717" cy="1077.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="726" y="1079.8198">HTTPResponse()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="730" y="1092.6245"/><ellipse cx="717" cy="1103.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="726" y="1105.4292">setStatusCode(size_t statusCode): void</text><ellipse cx="717" cy="1115.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="726" y="1118.2339">getStatusCode() const: size_t</text><ellipse cx="717" cy="1128.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="726" y="1131.0386">setReasonPhrase(size_t statusCode): void</text><ellipse cx="717" cy="1141.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="726" y="1143.8433">getReasonPhrase() const: std::string</text><ellipse cx="717" cy="1154.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="726" y="1156.6479">getResponseSize() const: size_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="730" y="1169.4526"/><ellipse cx="717" cy="1179.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="726" y="1182.2573">parseIncoming(): void</text><ellipse cx="717" cy="1192.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="726" y="1195.062">prepareOutgoing(): void</text><!--entity ##10--><!--link Socket to TCPSocket--><path d="M896,357.37 C896,371.51 896,385.27 896,397.97 " fill="none" id="Socket-TCPSocket" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="889,357.19,896,337.19,903,357.19,889,357.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link TCPSocket to HTTPServer--><path d="M870.08,548.76 C863.67,568.73 856.6,590.78 849.49,612.92 " fill="none" id="TCPSocket-HTTPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="874.09,536.28,868.449,540.7721,870.426,547.7069,876.067,543.2148,874.09,536.28" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="863" y="579.0669">«uses»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="847.9056" y="555.6888">1..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="843.784" y="601.7596">1</text><!--link TCPSocket to HTTPClient--><path d="M961.88,546.35 C979.02,567.61 997.11,590.87 1013,613 C1041.44,652.62 1071.1,700.44 1089.79,731.49 " fill="none" id="TCPSocket-HTTPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="953.56,536.09,954.2303,543.2699,961.1157,545.4126,960.4454,538.2328,953.56,536.09" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="989" y="579.0669">«uses»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="935.094" y="555.7208">1..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1077.2205" y="720.5215">1</text><!--link HTTPServer to HTTPRequest--><path d="M672.3,917.36 C653.42,939.57 634.22,962.14 616.06,983.5 " fill="none" id="HTTPServer-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="607.52,993.55,614.4538,991.5695,615.2925,984.4074,608.3587,986.3878,607.52,993.55" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="642" y="960.0669">«processes»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="657.8723" y="937.1711">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="589.8292" y="982.8827">1..*</text><!--link HTTPServer to HTTPResponse--><path d="M818.22,917.36 C820.88,940.74 823.59,964.52 826.13,986.87 " fill="none" id="HTTPServer-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="827.61,999.85,830.9058,993.4362,826.253,987.927,822.9572,994.3408,827.61,999.85" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="824" y="960.0669">«sends»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="810.8603" y="937.1711">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="802.929" y="988.9554">1..*</text><!--link HTTPClient to HTTPRequest--><path d="M1095.78,798.69 C1080.51,832.63 1052.35,885.13 1013,917 C966.55,954.62 944.86,949 887,964 C800.84,986.34 772.57,963.37 689,994 C687.15,994.68 685.29,995.38 683.44,996.1 " fill="none" id="HTTPClient-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="671.2,1001.13,678.2701,1002.5493,682.2994,996.569,675.2294,995.1497,671.2,1001.13" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="959" y="960.0669">«sends»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1084.6051" y="818.3873">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="674.8242" y="989.6531">1..*</text><!--link HTTPClient to HTTPResponse--><path d="M1102.24,798.72 C1092.32,840.54 1070.55,913.55 1031,964 C1017.2,981.6 1000.52,997.9 982.82,1012.64 " fill="none" id="HTTPClient-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="972.3,1021.13,979.4815,1020.4769,981.6407,1013.5967,974.4593,1014.2498,972.3,1021.13" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1042" y="960.0669">«processes»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1101.7311" y="818.4228">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="980.2188" y="1013.4319">1..*</text><!--link HTTPMSGSchema to HTTPRequest--><path d="M407.65,927.72 C421.93,950.23 436.3,972.86 449.71,993.99 " fill="none" id="HTTPMSGSchema-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="401.56,931.19,396.75,910.55,413.38,923.69,401.56,931.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link HTTPMSGSchema to HTTPResponse--><path d="M591.34,916.56 C650.73,934.06 675.31,917.75 721,947 C742.47,960.75 761.59,979.82 777.87,999.84 " fill="none" id="HTTPMSGSchema-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="588.94,923.13,572.21,910.13,593.4,909.86,588.94,923.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

package butterfly #DDDDDD
{

class Socket
{
    - _socketDomain, _socketType, _socketProtocol: int
    # _fd: int
    # _addr: sockaddr_in

    + Socket(int domain, int type, int protocol)
    + Socket(int fileDescriptor, int domain, int type, int protocol)

    + getFileDescriptor() const: int
    + shutdown() const: bool
    + setOptions() const: bool
    + setBlocking() const: bool
    + setNonBlocking() const: bool

    + bind(unsigned int port): bool
    + listen() const: bool
    + accept(): std::shared_ptr<Socket>
    + connect(const std::string& host, const int port): bool
    + disconnect() const: bool
    + hostnameToIP(const std::string &hostname, std::string &ip): int
}

class TCPSocket
{

    + TCPSocket()
    + TCPSocket(int fileDescriptor)

    + accept(): std::shared_ptr<TCPSocket>
    + send(const std::string& s) const: bool
    + recv(char *buf,int len) const: int
    + recvAll(int chunkSize) const: std::string
}


class HTTPServer
{
    - _port: unsigned int port
    - _running: bool
    - _TCPSocket, _newTCPSocket: std::shared_ptr<TCPSocket>
    - _httpRequest: std::unique_ptr<HTTPRequest>
    - _httpResponse: std::unique_ptr<HTTPResponse>
    - _masterPKeyCB: std::function

    + HTTPServer(unsigned int port)

    - handleRequest(): bool
    - recvRequest(): bool
    - processRequest(): void
    - sendResponse(): bool
    - browserRoute(): void
    - masterKeyRoute(): bool
    - successResponse(size_t statusCode): void
    - errorResponse((size_t statusCode): void

    + registerMasterPKeyCB(std::function<void(std::string)> cb): void
    + run(): void
    + stop(): void
}

class HTTPClient <<NOT IMPLEMENTED>>
{

    + HTTPClient()
}

class HTTPMSGSchema
{
    - _data, _body, _messageType: std::string
    - _httpMethod: Method
    - _protocol: Protocol
    - _httpHeaders: std::vector< std::pair<std::string, std::string> >

    + HTTPMSGSchema(const std::string &messageType)

    + print() const: void
    + addHTTPData(const std::string &data): void
    + getHTTPData() const: std::string
    + setProtocol(Protocol protocol): void
    + getProtocol() const: Protocol
    + addBody(const std::string &body)
    + getBody() const: std::string
    + setHTTPHeader(const std::string &headerName, const std::string &headerContent): void
    + getHTTPHeader(const std::string &headerName) const: std::string
    + getHTTPHeaderSize() const: size_t

    + parseIncoming() = 0: void
    + prepareOutgoing() = 0: void
}

class HTTPRequest
{
    - _url, _userAgent: std::string

    + HTTPRequest()

    + setMethod(Method &method): void
    + getMethod() const: Method
    + setURL(const std::string &url): void
    + getURL() const: std::string
    + setUserAgent(const std::string &userAgent): void
    + getUserAgent() const: std::string
    + getRequestSize() const: size_t

    + parseIncoming(): void
    + prepareOutgoing(): void
}

class HTTPResponse
{
    - _reasonPhrase: std::string
    - _statusCode: size_t

    + HTTPResponse()

    + setStatusCode(size_t statusCode): void
    + getStatusCode() const: size_t
    + setReasonPhrase(size_t statusCode): void
    + getReasonPhrase() const: std::string
    + getResponseSize() const: size_t

    + parseIncoming(): void
    + prepareOutgoing(): void
}

together {
    class HTTPServer
    class HTTPClient
}

Socket            <|- - TCPSocket
TCPSocket "1..*"  o- -  "1" HTTPServer : <<uses>>
TCPSocket "1..*"  o- -  "1" HTTPClient : <<uses>>

HTTPServer "1"    - -* "1..*" HTTPRequest: <<processes>>
HTTPServer "1"    - -* "1..*" HTTPResponse: <<sends>>

HTTPClient "1"    - -* "1..*" HTTPRequest: <<sends>>
HTTPClient "1"    - -* "1..*" HTTPResponse: <<processes>>

HTTPMSGSchema <|- - HTTPRequest
HTTPMSGSchema <|- - HTTPResponse

}
@enduml

PlantUML version 1.2018.13(Mon Nov 26 18:11:51 CET 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.11+9-Ubuntu-0ubuntu2.20.04
Operating System: Linux
OS Version: 5.11.0-38-generic
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>