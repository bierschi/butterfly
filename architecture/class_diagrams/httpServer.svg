<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1275px" preserveAspectRatio="none" style="width:1634px;height:1275px;" version="1.1" viewBox="0 0 1634 1275" width="1634px" zoomAndPan="magnify"><defs><filter height="300%" id="f13krqk2am4cqx" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster butterfly--><polygon fill="#DDDDDD" filter="url(#f13krqk2am4cqx)" points="22,24,96,24,103,46.2969,1612,46.2969,1612,1263,22,1263,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="103" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="68" x="26" y="38.9951">butterfly</text><!--class Socket--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="278.4844" id="Socket" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="884.5" y="59"/><ellipse cx="1055.25" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1058.2188,80.6406 Q1057.6406,80.9375 1057,81.0781 Q1056.3594,81.2344 1055.6563,81.2344 Q1053.1563,81.2344 1051.8281,79.5938 Q1050.5156,77.9375 1050.5156,74.8125 Q1050.5156,71.6875 1051.8281,70.0313 Q1053.1563,68.375 1055.6563,68.375 Q1056.3594,68.375 1057,68.5313 Q1057.6563,68.6875 1058.2188,68.9844 L1058.2188,71.7031 Q1057.5938,71.125 1057,70.8594 Q1056.4063,70.5781 1055.7813,70.5781 Q1054.4375,70.5781 1053.75,71.6563 Q1053.0625,72.7188 1053.0625,74.8125 Q1053.0625,76.9063 1053.75,77.9844 Q1054.4375,79.0469 1055.7813,79.0469 Q1056.4063,79.0469 1057,78.7813 Q1057.5938,78.5 1058.2188,77.9219 L1058.2188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1075.75" y="79.1543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="885.5" x2="1276.5" y1="91" y2="91"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="892.5" y="99.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="904.5" y="105.2104">_socketDomain, _socketType, _socketProtocol: int</text><polygon fill="none" points="895.5,110.707,899.5,114.707,895.5,118.707,891.5,114.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="904.5" y="118.0151">_fd: int</text><polygon fill="none" points="895.5,123.5117,899.5,127.5117,895.5,131.5117,891.5,127.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="904.5" y="130.8198">_addr: sockaddr_in</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="885.5" x2="1276.5" y1="137.4141" y2="137.4141"/><ellipse cx="895.5" cy="149.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="904.5" y="151.6245">Socket(int domain, int type, int protocol)</text><ellipse cx="895.5" cy="162.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="904.5" y="164.4292">Socket(int fileDescriptor, int domain, int type, int protocol)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="908.5" y="177.2339"/><ellipse cx="895.5" cy="187.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="904.5" y="190.0386">getFileDescriptor() const: int</text><ellipse cx="895.5" cy="200.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="904.5" y="202.8433">shutdown() const: bool</text><ellipse cx="895.5" cy="213.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="904.5" y="215.6479">setOptions() const: bool</text><ellipse cx="895.5" cy="226.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="904.5" y="228.4526">setBlocking() const: bool</text><ellipse cx="895.5" cy="238.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="904.5" y="241.2573">setNonBlocking() const: bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="908.5" y="254.062"/><ellipse cx="895.5" cy="264.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="904.5" y="266.8667">bind(unsigned int port): bool</text><ellipse cx="895.5" cy="277.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="904.5" y="279.6714">listen() const: bool</text><ellipse cx="895.5" cy="290.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="904.5" y="292.4761">accept(): std::shared_ptr&lt;Socket&gt;</text><ellipse cx="895.5" cy="302.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="904.5" y="305.2808">connect(const std::string&amp; host, const int port): bool</text><ellipse cx="895.5" cy="315.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="904.5" y="318.0854">disconnect() const: bool</text><ellipse cx="895.5" cy="328.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="904.5" y="330.8901">hostnameToIP(const std::string &amp;hostname, std::string &amp;ip): int</text><!--class TCPSocket--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="137.6328" id="TCPSocket" style="stroke: #A80036; stroke-width: 1.5;" width="366" x="898" y="398"/><ellipse cx="1043.75" cy="414" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1046.7188,419.6406 Q1046.1406,419.9375 1045.5,420.0781 Q1044.8594,420.2344 1044.1563,420.2344 Q1041.6563,420.2344 1040.3281,418.5938 Q1039.0156,416.9375 1039.0156,413.8125 Q1039.0156,410.6875 1040.3281,409.0313 Q1041.6563,407.375 1044.1563,407.375 Q1044.8594,407.375 1045.5,407.5313 Q1046.1563,407.6875 1046.7188,407.9844 L1046.7188,410.7031 Q1046.0938,410.125 1045.5,409.8594 Q1044.9063,409.5781 1044.2813,409.5781 Q1042.9375,409.5781 1042.25,410.6563 Q1041.5625,411.7188 1041.5625,413.8125 Q1041.5625,415.9063 1042.25,416.9844 Q1042.9375,418.0469 1044.2813,418.0469 Q1044.9063,418.0469 1045.5,417.7813 Q1046.0938,417.5 1046.7188,416.9219 L1046.7188,419.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="1064.25" y="418.1543">TCPSocket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="899" x2="1263" y1="430" y2="430"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="899" x2="1263" y1="438" y2="438"/><ellipse cx="909" cy="449.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="918" y="452.2104">TCPSocket()</text><ellipse cx="909" cy="462.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="918" y="465.0151">TCPSocket(int fileDescriptor)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="922" y="477.8198"/><ellipse cx="909" cy="488.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="918" y="490.6245">accept(): std::shared_ptr&lt;TCPSocket&gt;</text><ellipse cx="909" cy="501.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="918" y="503.4292">send(const std::string&amp; s) const: bool</text><ellipse cx="909" cy="513.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="918" y="516.2339">recv(char *buf,int len) const: int</text><ellipse cx="909" cy="526.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="918" y="529.0386">recvAll(int chunkSize, bool blocking=false) const: std::string</text><!--class HTTPServer--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="304.0938" id="HTTPServer" style="stroke: #A80036; stroke-width: 1.5;" width="388" x="639" y="632.5"/><ellipse cx="793.25" cy="648.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M796.2188,654.1406 Q795.6406,654.4375 795,654.5781 Q794.3594,654.7344 793.6563,654.7344 Q791.1563,654.7344 789.8281,653.0938 Q788.5156,651.4375 788.5156,648.3125 Q788.5156,645.1875 789.8281,643.5313 Q791.1563,641.875 793.6563,641.875 Q794.3594,641.875 795,642.0313 Q795.6563,642.1875 796.2188,642.4844 L796.2188,645.2031 Q795.5938,644.625 795,644.3594 Q794.4063,644.0781 793.7813,644.0781 Q792.4375,644.0781 791.75,645.1563 Q791.0625,646.2188 791.0625,648.3125 Q791.0625,650.4063 791.75,651.4844 Q792.4375,652.5469 793.7813,652.5469 Q794.4063,652.5469 795,652.2813 Q795.5938,652 796.2188,651.4219 L796.2188,654.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="813.75" y="652.6543">HTTPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="640" x2="1026" y1="664.5" y2="664.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="673.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="659" y="678.7104">_port: unsigned int port</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="686.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="659" y="691.5151">_running: bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="699.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="659" y="704.3198">_TCPSocket, _newTCPSocket: std::shared_ptr&lt;TCPSocket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="711.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="659" y="717.1245">_httpRequest: std::unique_ptr&lt;HTTPRequest&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="724.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="659" y="729.9292">_httpResponse: std::unique_ptr&lt;HTTPResponse&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="737.4258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="659" y="742.7339">_masterPKeyCB: std::function</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="640" x2="1026" y1="749.3281" y2="749.3281"/><ellipse cx="650" cy="761.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="659" y="763.5386">HTTPServer(unsigned int port)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="663" y="776.3433"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="783.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="659" y="789.1479">handleRequest(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="796.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="659" y="801.9526">recvRequest(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="809.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="659" y="814.7573">processRequest(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="822.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="659" y="827.562">sendResponse(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="835.0586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="659" y="840.3667">browserRoute(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="847.8633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="659" y="853.1714">masterKeyRoute(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="860.668"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="659" y="865.9761">successResponse(size_t statusCode): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="647" y="873.4727"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="659" y="878.7808">errorResponse((size_t statusCode): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="663" y="891.5854"/><ellipse cx="650" cy="902.082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="362" x="659" y="904.3901">registerMasterPKeyCB(std::function&lt;void(std::string)&gt; cb): void</text><ellipse cx="650" cy="914.8867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="58" x="659" y="917.1948">run(): void</text><ellipse cx="650" cy="927.6914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="659" y="929.9995">stop(): void</text><!--class HTTPClient--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="278.4844" id="HTTPClient" style="stroke: #A80036; stroke-width: 1.5;" width="534" x="1062" y="645.5"/><ellipse cx="1291.75" cy="661.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1294.7188,667.1406 Q1294.1406,667.4375 1293.5,667.5781 Q1292.8594,667.7344 1292.1563,667.7344 Q1289.6563,667.7344 1288.3281,666.0938 Q1287.0156,664.4375 1287.0156,661.3125 Q1287.0156,658.1875 1288.3281,656.5313 Q1289.6563,654.875 1292.1563,654.875 Q1292.8594,654.875 1293.5,655.0313 Q1294.1563,655.1875 1294.7188,655.4844 L1294.7188,658.2031 Q1294.0938,657.625 1293.5,657.3594 Q1292.9063,657.0781 1292.2813,657.0781 Q1290.9375,657.0781 1290.25,658.1563 Q1289.5625,659.2188 1289.5625,661.3125 Q1289.5625,663.4063 1290.25,664.4844 Q1290.9375,665.5469 1292.2813,665.5469 Q1292.9063,665.5469 1293.5,665.2813 Q1294.0938,665 1294.7188,664.4219 L1294.7188,667.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="1312.25" y="665.6543">HTTPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063" x2="1595" y1="677.5" y2="677.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="686.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="1082" y="691.7104">_port: unsigned int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="699.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1082" y="704.5151">_tcpSocket: std::shared_ptr&lt;TCPSocket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="712.0117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1082" y="717.3198">_httpRequest: std::unique_ptr&lt;HTTPRequest&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="724.8164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1082" y="730.1245">_httpResponse: std::unique_ptr&lt;HTTPResponse&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="737.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="448" x="1082" y="742.9292">_httpHeaders, _formParams: std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1086" y="755.7339"/><ellipse cx="1073" cy="766.2305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1082" y="768.5386">statusCode : size_t</text><ellipse cx="1073" cy="779.0352" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1082" y="781.3433">reasonPhrase: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063" x2="1595" y1="787.9375" y2="787.9375"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="796.8398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="1082" y="802.1479">getIpFromUrl(std::string url): std::string</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="809.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="1082" y="814.9526">prepareRequest(const std::string &amp;url): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1070" y="822.4492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1082" y="827.7573">processResponse(): bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1086" y="840.562"/><ellipse cx="1073" cy="851.0586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1082" y="853.3667">HTTPClient(unsigned int port=5000)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1086" y="866.1714"/><ellipse cx="1073" cy="876.668" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="1082" y="878.9761">setHTTPHeader(const std::string &amp;headerName, const std::string &amp;headerContent): void</text><ellipse cx="1073" cy="889.4727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="1082" y="891.7808">setFormParam(const std::string &amp;param, const std::string &amp;value): void</text><ellipse cx="1073" cy="902.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1082" y="904.5854">get(const std::string &amp;url): void</text><ellipse cx="1073" cy="915.082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1082" y="917.3901">post(const std::string &amp;url): std::string</text><!--class HTTPMSGSchema--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="342.5078" id="HTTPMSGSchema" style="stroke: #A80036; stroke-width: 1.5;" width="565" x="38.5" y="613"/><ellipse cx="262.75" cy="629" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M265.7188,634.6406 Q265.1406,634.9375 264.5,635.0781 Q263.8594,635.2344 263.1563,635.2344 Q260.6563,635.2344 259.3281,633.5938 Q258.0156,631.9375 258.0156,628.8125 Q258.0156,625.6875 259.3281,624.0313 Q260.6563,622.375 263.1563,622.375 Q263.8594,622.375 264.5,622.5313 Q265.1563,622.6875 265.7188,622.9844 L265.7188,625.7031 Q265.0938,625.125 264.5,624.8594 Q263.9063,624.5781 263.2813,624.5781 Q261.9375,624.5781 261.25,625.6563 Q260.5625,626.7188 260.5625,628.8125 Q260.5625,630.9063 261.25,631.9844 Q261.9375,633.0469 263.2813,633.0469 Q263.9063,633.0469 264.5,632.7813 Q265.0938,632.5 265.7188,631.9219 L265.7188,634.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="283.25" y="633.1543">HTTPMSGSchema</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="602.5" y1="645" y2="645"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="653.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="58.5" y="659.2104">_httpData, _body, _messageType, _formParam: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="666.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="58.5" y="672.0151">_httpMethod: Method</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="679.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="58.5" y="684.8198">_protocol: Protocol</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="692.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="58.5" y="697.6245">_httpHeaders: std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="602.5" y1="704.2188" y2="704.2188"/><ellipse cx="49.5" cy="716.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="58.5" y="718.4292">HTTPMSGSchema(const std::string &amp;messageType)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62.5" y="731.2339"/><ellipse cx="49.5" cy="741.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="58.5" y="744.0386">print() const: void</text><ellipse cx="49.5" cy="754.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="58.5" y="756.8433">addHTTPData(const std::string &amp;data): void</text><ellipse cx="49.5" cy="767.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="58.5" y="769.6479">getHTTPData() const: std::string</text><ellipse cx="49.5" cy="780.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58.5" y="782.4526">setProtocol(Protocol protocol): void</text><ellipse cx="49.5" cy="792.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="58.5" y="795.2573">getProtocol() const: Protocol</text><ellipse cx="49.5" cy="805.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="58.5" y="808.062">addBody(const std::string &amp;body)</text><ellipse cx="49.5" cy="818.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="58.5" y="820.8667">getBody() const: std::string</text><ellipse cx="49.5" cy="831.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="58.5" y="833.6714">setHTTPHeader(const std::string &amp;headerName, const std::string &amp;headerContent): void</text><ellipse cx="49.5" cy="844.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="58.5" y="846.4761">getHTTPHeader(const std::string &amp;headerName) const: std::string</text><ellipse cx="49.5" cy="856.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="519" x="58.5" y="859.2808">addHTTPHeaderVector(std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt; &amp;headerVec): void</text><ellipse cx="49.5" cy="869.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="58.5" y="872.0854">getHTTPHeaderSize() const: size_t</text><ellipse cx="49.5" cy="882.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="58.5" y="884.8901">setFormParam(const std::string &amp;param, const std::string &amp;value): void</text><ellipse cx="49.5" cy="895.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="58.5" y="897.6948">getFormParam() const: std::string</text><ellipse cx="49.5" cy="908.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="58.5" y="910.4995">addFormParamVector(std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt; &amp;formParamVec): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62.5" y="923.3042"/><ellipse cx="49.5" cy="933.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="58.5" y="936.1089">parseIncoming() = 0: void</text><ellipse cx="49.5" cy="946.6055" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="58.5" y="948.9136">prepareOutgoing() = 0: void</text><!--class HTTPRequest--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="214.4609" id="HTTPRequest" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="419" y="1033"/><ellipse cx="527.25" cy="1049" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M530.2188,1054.6406 Q529.6406,1054.9375 529,1055.0781 Q528.3594,1055.2344 527.6563,1055.2344 Q525.1563,1055.2344 523.8281,1053.5938 Q522.5156,1051.9375 522.5156,1048.8125 Q522.5156,1045.6875 523.8281,1044.0313 Q525.1563,1042.375 527.6563,1042.375 Q528.3594,1042.375 529,1042.5313 Q529.6563,1042.6875 530.2188,1042.9844 L530.2188,1045.7031 Q529.5938,1045.125 529,1044.8594 Q528.4063,1044.5781 527.7813,1044.5781 Q526.4375,1044.5781 525.75,1045.6563 Q525.0625,1046.7188 525.0625,1048.8125 Q525.0625,1050.9063 525.75,1051.9844 Q526.4375,1053.0469 527.7813,1053.0469 Q528.4063,1053.0469 529,1052.7813 Q529.5938,1052.5 530.2188,1051.9219 L530.2188,1054.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="547.75" y="1053.1543">HTTPRequest</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="420" x2="726" y1="1065" y2="1065"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="427" y="1073.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="439" y="1079.2104">_url, _userAgent: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="420" x2="726" y1="1085.8047" y2="1085.8047"/><ellipse cx="430" cy="1097.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="439" y="1100.0151">HTTPRequest()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="443" y="1112.8198"/><ellipse cx="430" cy="1123.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="439" y="1125.6245">setMethod(Method &amp;method): void</text><ellipse cx="430" cy="1136.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="439" y="1138.4292">getMethod() const: Method</text><ellipse cx="430" cy="1148.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="439" y="1151.2339">setURL(const std::string &amp;url): void</text><ellipse cx="430" cy="1161.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="439" y="1164.0386">getURL() const: std::string</text><ellipse cx="430" cy="1174.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="439" y="1176.8433">setUserAgent(const std::string &amp;userAgent): void</text><ellipse cx="430" cy="1187.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="439" y="1189.6479">getUserAgent() const: std::string</text><ellipse cx="430" cy="1200.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="439" y="1202.4526">getRequestSize() const: size_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="443" y="1215.2573"/><ellipse cx="430" cy="1225.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="439" y="1228.062">parseIncoming(): void</text><ellipse cx="430" cy="1238.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="439" y="1240.8667">prepareOutgoing(): void</text><!--class HTTPResponse--><rect fill="#FEFECE" filter="url(#f13krqk2am4cqx)" height="201.6563" id="HTTPResponse" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="762" y="1039"/><ellipse cx="844.25" cy="1055" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M847.2188,1060.6406 Q846.6406,1060.9375 846,1061.0781 Q845.3594,1061.2344 844.6563,1061.2344 Q842.1563,1061.2344 840.8281,1059.5938 Q839.5156,1057.9375 839.5156,1054.8125 Q839.5156,1051.6875 840.8281,1050.0313 Q842.1563,1048.375 844.6563,1048.375 Q845.3594,1048.375 846,1048.5313 Q846.6563,1048.6875 847.2188,1048.9844 L847.2188,1051.7031 Q846.5938,1051.125 846,1050.8594 Q845.4063,1050.5781 844.7813,1050.5781 Q843.4375,1050.5781 842.75,1051.6563 Q842.0625,1052.7188 842.0625,1054.8125 Q842.0625,1056.9063 842.75,1057.9844 Q843.4375,1059.0469 844.7813,1059.0469 Q845.4063,1059.0469 846,1058.7813 Q846.5938,1058.5 847.2188,1057.9219 L847.2188,1060.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="864.75" y="1059.1543">HTTPResponse</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="763" x2="1027" y1="1071" y2="1071"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="770" y="1079.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="782" y="1085.2104">_reasonPhrase: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="770" y="1092.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="782" y="1098.0151">_statusCode: size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="763" x2="1027" y1="1104.6094" y2="1104.6094"/><ellipse cx="773" cy="1116.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="782" y="1118.8198">HTTPResponse()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="786" y="1131.6245"/><ellipse cx="773" cy="1142.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="782" y="1144.4292">setStatusCode(size_t statusCode): void</text><ellipse cx="773" cy="1154.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="782" y="1157.2339">getStatusCode() const: size_t</text><ellipse cx="773" cy="1167.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="782" y="1170.0386">setReasonPhrase(size_t statusCode): void</text><ellipse cx="773" cy="1180.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="782" y="1182.8433">getReasonPhrase() const: std::string</text><ellipse cx="773" cy="1193.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="782" y="1195.6479">getResponseSize() const: size_t</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="786" y="1208.4526"/><ellipse cx="773" cy="1218.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="782" y="1221.2573">parseIncoming(): void</text><ellipse cx="773" cy="1231.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="782" y="1234.062">prepareOutgoing(): void</text><!--entity ##10--><!--link Socket to TCPSocket--><path d="M1081,357.37 C1081,371.51 1081,385.27 1081,397.97 " fill="none" id="Socket-TCPSocket" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1074,357.19,1081,337.19,1088,357.19,1074,357.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link TCPSocket to HTTPServer--><path d="M1019.21,546.61 C998.71,572.68 975.16,602.64 951.86,632.29 " fill="none" id="TCPSocket-HTTPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1027.49,536.07,1020.6389,538.32,1020.0808,545.5095,1026.9319,543.2595,1027.49,536.07" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="1001" y="579.0669">«uses»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="998.0906" y="555.6989">1..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="949.4235" y="621.6219">1</text><!--link TCPSocket to HTTPClient--><path d="M1142.64,546.42 C1166.15,576.32 1193.69,611.36 1220.28,645.19 " fill="none" id="TCPSocket-HTTPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1134.51,536.07,1135.0681,543.2595,1141.9192,545.5095,1141.3611,538.32,1134.51,536.07" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="1169" y="579.0669">«uses»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1115.6454" y="555.6989">1..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1206.1156" y="634.2186">1</text><!--link HTTPServer to HTTPRequest--><path d="M721.79,936.7 C700.79,965.26 679.12,994.72 659.03,1022.03 " fill="none" id="HTTPServer-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="651.12,1032.78,657.897,1030.3158,658.2289,1023.1124,651.4519,1025.5765,651.12,1032.78" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="680" y="999.0669">«processes»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="708.2095" y="956.5033">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="632.8042" y="1021.7691">1..*</text><!--link HTTPServer to HTTPResponse--><path d="M859.52,936.7 C864.77,966.62 870.19,997.54 875.17,1025.93 " fill="none" id="HTTPServer-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="877.42,1038.78,880.3244,1032.1797,875.3489,1026.9601,872.4445,1033.5604,877.42,1038.78" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="870" y="999.0669">«sends»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="852.6108" y="956.5033">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="852.2844" y="1027.8803">1..*</text><!--link HTTPClient to HTTPRequest--><path d="M1105.5,923.7 C1085.25,935 1064.88,945.93 1045,956 C996.85,980.4 984.91,988.2 933,1003 C851.63,1026.2 824.33,1003.57 745,1033 C743.15,1033.69 741.3,1034.39 739.45,1035.12 " fill="none" id="HTTPClient-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="727.22,1040.19,734.2955,1041.5818,738.3016,1035.5859,731.2261,1034.1941,727.22,1040.19" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="983" y="999.0669">«sends»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1084.3477" y="944.2378">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="730.8458" y="1028.7179">1..*</text><!--link HTTPClient to HTTPResponse--><path d="M1252.63,923.73 C1232.56,952.32 1209.12,980.53 1183,1003 C1141.47,1038.73 1088.94,1067.17 1040.16,1088.62 " fill="none" id="HTTPClient-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1028.17,1093.78,1035.2628,1095.0808,1039.1915,1089.0339,1032.0987,1087.7331,1028.17,1093.78" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1199" y="999.0669">«processes»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1239.9836" y="944.2696">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1036.0816" y="1087.9221">1..*</text><!--link HTTPMSGSchema to HTTPRequest--><path d="M454.36,972.58 C469.04,993.17 483.6,1013.58 497.21,1032.68 " fill="none" id="HTTPMSGSchema-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="448.48,976.39,442.57,956.04,459.88,968.26,448.48,976.39" style="stroke: #A80036; stroke-width: 1.0;"/><!--link HTTPMSGSchema to HTTPResponse--><path d="M623.15,955.44 C689.73,975.21 717.36,954.24 770,986 C792.47,999.56 812.67,1018.67 829.95,1038.82 " fill="none" id="HTTPMSGSchema-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="620.51,961.93,603.8,948.9,624.99,948.67,620.51,961.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

package butterfly #DDDDDD
{

class Socket
{
    - _socketDomain, _socketType, _socketProtocol: int
    # _fd: int
    # _addr: sockaddr_in

    + Socket(int domain, int type, int protocol)
    + Socket(int fileDescriptor, int domain, int type, int protocol)

    + getFileDescriptor() const: int
    + shutdown() const: bool
    + setOptions() const: bool
    + setBlocking() const: bool
    + setNonBlocking() const: bool

    + bind(unsigned int port): bool
    + listen() const: bool
    + accept(): std::shared_ptr<Socket>
    + connect(const std::string& host, const int port): bool
    + disconnect() const: bool
    + hostnameToIP(const std::string &hostname, std::string &ip): int
}

class TCPSocket
{

    + TCPSocket()
    + TCPSocket(int fileDescriptor)

    + accept(): std::shared_ptr<TCPSocket>
    + send(const std::string& s) const: bool
    + recv(char *buf,int len) const: int
    + recvAll(int chunkSize, bool blocking=false) const: std::string
}


class HTTPServer
{
    - _port: unsigned int port
    - _running: bool
    - _TCPSocket, _newTCPSocket: std::shared_ptr<TCPSocket>
    - _httpRequest: std::unique_ptr<HTTPRequest>
    - _httpResponse: std::unique_ptr<HTTPResponse>
    - _masterPKeyCB: std::function

    + HTTPServer(unsigned int port)

    - handleRequest(): bool
    - recvRequest(): bool
    - processRequest(): void
    - sendResponse(): bool
    - browserRoute(): void
    - masterKeyRoute(): bool
    - successResponse(size_t statusCode): void
    - errorResponse((size_t statusCode): void

    + registerMasterPKeyCB(std::function<void(std::string)> cb): void
    + run(): void
    + stop(): void
}

class HTTPClient
{
    - _port: unsigned int
    - _tcpSocket: std::shared_ptr<TCPSocket>
    - _httpRequest: std::unique_ptr<HTTPRequest>
    - _httpResponse: std::unique_ptr<HTTPResponse>
    - _httpHeaders, _formParams: std::vector< std::pair<std::string, std::string> >

    + statusCode : size_t
    + reasonPhrase: std::string

    - getIpFromUrl(std::string url): std::string
    - prepareRequest(const std::string &url): void
    - processResponse(): bool

    + HTTPClient(unsigned int port=5000)

    + setHTTPHeader(const std::string &headerName, const std::string &headerContent): void
    + setFormParam(const std::string &param, const std::string &value): void
    + get(const std::string &url): void
    + post(const std::string &url): std::string
}

class HTTPMSGSchema
{
    - _httpData, _body, _messageType, _formParam: std::string
    - _httpMethod: Method
    - _protocol: Protocol
    - _httpHeaders: std::vector< std::pair<std::string, std::string> >

    + HTTPMSGSchema(const std::string &messageType)

    + print() const: void
    + addHTTPData(const std::string &data): void
    + getHTTPData() const: std::string
    + setProtocol(Protocol protocol): void
    + getProtocol() const: Protocol
    + addBody(const std::string &body)
    + getBody() const: std::string
    + setHTTPHeader(const std::string &headerName, const std::string &headerContent): void
    + getHTTPHeader(const std::string &headerName) const: std::string
    + addHTTPHeaderVector(std::vector< std::pair<std::string, std::string> > &headerVec): void
    + getHTTPHeaderSize() const: size_t
    + setFormParam(const std::string &param, const std::string &value): void
    + getFormParam() const: std::string
    + addFormParamVector(std::vector< std::pair<std::string, std::string> > &formParamVec): void
    
    + parseIncoming() = 0: void
    + prepareOutgoing() = 0: void
}

class HTTPRequest
{
    - _url, _userAgent: std::string

    + HTTPRequest()

    + setMethod(Method &method): void
    + getMethod() const: Method
    + setURL(const std::string &url): void
    + getURL() const: std::string
    + setUserAgent(const std::string &userAgent): void
    + getUserAgent() const: std::string
    + getRequestSize() const: size_t

    + parseIncoming(): void
    + prepareOutgoing(): void
}

class HTTPResponse
{
    - _reasonPhrase: std::string
    - _statusCode: size_t

    + HTTPResponse()

    + setStatusCode(size_t statusCode): void
    + getStatusCode() const: size_t
    + setReasonPhrase(size_t statusCode): void
    + getReasonPhrase() const: std::string
    + getResponseSize() const: size_t

    + parseIncoming(): void
    + prepareOutgoing(): void
}

together {
    class HTTPServer
    class HTTPClient
}

Socket            <|- - TCPSocket
TCPSocket "1..*"  o- -  "1" HTTPServer : <<uses>>
TCPSocket "1..*"  o- -  "1" HTTPClient : <<uses>>

HTTPServer "1"    - -* "1..*" HTTPRequest: <<processes>>
HTTPServer "1"    - -* "1..*" HTTPResponse: <<sends>>

HTTPClient "1"    - -* "1..*" HTTPRequest: <<sends>>
HTTPClient "1"    - -* "1..*" HTTPResponse: <<processes>>

HTTPMSGSchema <|- - HTTPRequest
HTTPMSGSchema <|- - HTTPResponse

}
@enduml

PlantUML version 1.2018.13(Mon Nov 26 18:11:51 CET 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.13+8-Ubuntu-0ubuntu1.20.04
Operating System: Linux
OS Version: 5.13.0-30-generic
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>