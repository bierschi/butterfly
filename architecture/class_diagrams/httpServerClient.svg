<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1288px" preserveAspectRatio="none" style="width:1610px;height:1288px;" version="1.1" viewBox="0 0 1610 1288" width="1610px" zoomAndPan="magnify"><defs><filter height="300%" id="f12vo11ztxni9z" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster butterfly--><polygon fill="#DDDDDD" filter="url(#f12vo11ztxni9z)" points="22,24,96,24,103,46.2969,1588,46.2969,1588,1276,22,1276,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="103" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="68" x="26" y="38.9951">butterfly</text><!--class Socket--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="278.4844" id="Socket" style="stroke: #A80036; stroke-width: 1.5;" width="393" x="865.5" y="59"/><ellipse cx="1036.25" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1039.2188,80.6406 Q1038.6406,80.9375 1038,81.0781 Q1037.3594,81.2344 1036.6563,81.2344 Q1034.1563,81.2344 1032.8281,79.5938 Q1031.5156,77.9375 1031.5156,74.8125 Q1031.5156,71.6875 1032.8281,70.0313 Q1034.1563,68.375 1036.6563,68.375 Q1037.3594,68.375 1038,68.5313 Q1038.6563,68.6875 1039.2188,68.9844 L1039.2188,71.7031 Q1038.5938,71.125 1038,70.8594 Q1037.4063,70.5781 1036.7813,70.5781 Q1035.4375,70.5781 1034.75,71.6563 Q1034.0625,72.7188 1034.0625,74.8125 Q1034.0625,76.9063 1034.75,77.9844 Q1035.4375,79.0469 1036.7813,79.0469 Q1037.4063,79.0469 1038,78.7813 Q1038.5938,78.5 1039.2188,77.9219 L1039.2188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="1056.75" y="79.1543">Socket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866.5" x2="1257.5" y1="91" y2="91"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="873.5" y="99.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="885.5" y="105.2104">_socketDomain, _socketType, _socketProtocol: int</text><polygon fill="none" points="876.5,110.707,880.5,114.707,876.5,118.707,872.5,114.707" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="39" x="885.5" y="118.0151">_fd: int</text><polygon fill="none" points="876.5,123.5117,880.5,127.5117,876.5,131.5117,872.5,127.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="885.5" y="130.8198">_addr: sockaddr_in</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="866.5" x2="1257.5" y1="137.4141" y2="137.4141"/><ellipse cx="876.5" cy="149.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="885.5" y="151.6245">Socket(int domain, int type, int protocol)</text><ellipse cx="876.5" cy="162.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="330" x="885.5" y="164.4292">Socket(int fileDescriptor, int domain, int type, int protocol)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="889.5" y="177.2339"/><ellipse cx="876.5" cy="187.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="885.5" y="190.0386">getFileDescriptor() const: int</text><ellipse cx="876.5" cy="200.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="885.5" y="202.8433">shutdown() const: bool</text><ellipse cx="876.5" cy="213.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="885.5" y="215.6479">setOptions() const: bool</text><ellipse cx="876.5" cy="226.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="885.5" y="228.4526">setBlocking() const: bool</text><ellipse cx="876.5" cy="238.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="885.5" y="241.2573">setNonBlocking() const: bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="889.5" y="254.062"/><ellipse cx="876.5" cy="264.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="885.5" y="266.8667">bind(unsigned int port): bool</text><ellipse cx="876.5" cy="277.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="885.5" y="279.6714">listen() const: bool</text><ellipse cx="876.5" cy="290.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="885.5" y="292.4761">accept(): std::shared_ptr&lt;Socket&gt;</text><ellipse cx="876.5" cy="302.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="301" x="885.5" y="305.2808">connect(const std::string&amp; host, const int port): bool</text><ellipse cx="876.5" cy="315.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="885.5" y="318.0854">disconnect() const: bool</text><ellipse cx="876.5" cy="328.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="367" x="885.5" y="330.8901">hostnameToIP(const std::string &amp;hostname, std::string &amp;ip): int</text><!--class TCPSocket--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="137.6328" id="TCPSocket" style="stroke: #A80036; stroke-width: 1.5;" width="366" x="879" y="398"/><ellipse cx="1024.75" cy="414" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1027.7188,419.6406 Q1027.1406,419.9375 1026.5,420.0781 Q1025.8594,420.2344 1025.1563,420.2344 Q1022.6563,420.2344 1021.3281,418.5938 Q1020.0156,416.9375 1020.0156,413.8125 Q1020.0156,410.6875 1021.3281,409.0313 Q1022.6563,407.375 1025.1563,407.375 Q1025.8594,407.375 1026.5,407.5313 Q1027.1563,407.6875 1027.7188,407.9844 L1027.7188,410.7031 Q1027.0938,410.125 1026.5,409.8594 Q1025.9063,409.5781 1025.2813,409.5781 Q1023.9375,409.5781 1023.25,410.6563 Q1022.5625,411.7188 1022.5625,413.8125 Q1022.5625,415.9063 1023.25,416.9844 Q1023.9375,418.0469 1025.2813,418.0469 Q1025.9063,418.0469 1026.5,417.7813 Q1027.0938,417.5 1027.7188,416.9219 L1027.7188,419.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="1045.25" y="418.1543">TCPSocket</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="880" x2="1244" y1="430" y2="430"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="880" x2="1244" y1="438" y2="438"/><ellipse cx="890" cy="449.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="899" y="452.2104">TCPSocket()</text><ellipse cx="890" cy="462.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="899" y="465.0151">TCPSocket(int fileDescriptor)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="903" y="477.8198"/><ellipse cx="890" cy="488.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="899" y="490.6245">accept(): std::shared_ptr&lt;TCPSocket&gt;</text><ellipse cx="890" cy="501.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="218" x="899" y="503.4292">send(const std::string&amp; s) const: bool</text><ellipse cx="890" cy="513.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="899" y="516.2339">recv(char *buf,int len) const: int</text><ellipse cx="890" cy="526.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="899" y="529.0386">recvAll(int chunkSize, bool blocking=false) const: std::string</text><!--class HTTPServer--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="278.4844" id="HTTPServer" style="stroke: #A80036; stroke-width: 1.5;" width="363" x="638.5" y="658"/><ellipse cx="780.25" cy="674" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M783.2188,679.6406 Q782.6406,679.9375 782,680.0781 Q781.3594,680.2344 780.6563,680.2344 Q778.1563,680.2344 776.8281,678.5938 Q775.5156,676.9375 775.5156,673.8125 Q775.5156,670.6875 776.8281,669.0313 Q778.1563,667.375 780.6563,667.375 Q781.3594,667.375 782,667.5313 Q782.6563,667.6875 783.2188,667.9844 L783.2188,670.7031 Q782.5938,670.125 782,669.8594 Q781.4063,669.5781 780.7813,669.5781 Q779.4375,669.5781 778.75,670.6563 Q778.0625,671.7188 778.0625,673.8125 Q778.0625,675.9063 778.75,676.9844 Q779.4375,678.0469 780.7813,678.0469 Q781.4063,678.0469 782,677.7813 Q782.5938,677.5 783.2188,676.9219 L783.2188,679.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="800.75" y="678.1543">HTTPServer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="639.5" x2="1000.5" y1="690" y2="690"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="698.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="658.5" y="704.2104">_port: unsigned int port</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="711.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="658.5" y="717.0151">_running: std::atomic&lt;bool&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="724.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="658.5" y="729.8198">_TCPSocket, _newTCPSocket: std::shared_ptr&lt;TCPSocket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="737.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="658.5" y="742.6245">_httpRequest: std::unique_ptr&lt;HTTPRequest&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="750.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="658.5" y="755.4292">_httpResponse: std::unique_ptr&lt;HTTPResponse&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="762.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="658.5" y="768.2339">_serverThread: std::thread</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="639.5" x2="1000.5" y1="774.8281" y2="774.8281"/><ellipse cx="649.5" cy="786.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="658.5" y="789.0386">HTTPServer(unsigned int port)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="662.5" y="801.8433"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="809.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="658.5" y="814.6479">handleRequest(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="822.1445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="658.5" y="827.4526">processRequest(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="834.9492"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="658.5" y="840.2573">sendResponse(): bool</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="847.7539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="658.5" y="853.062">browserRoute(): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="860.5586"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="658.5" y="865.8667">successResponse(size_t statusCode): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="873.3633"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="658.5" y="878.6714">errorResponse((size_t statusCode): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="646.5" y="886.168"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="658.5" y="891.4761">_run(): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="662.5" y="904.2808"/><ellipse cx="649.5" cy="914.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="658.5" y="917.0854">run(bool blocking=false): void</text><ellipse cx="649.5" cy="927.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="658.5" y="929.8901">stop(): void</text><!--class HTTPClient--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="240.0703" id="HTTPClient" style="stroke: #A80036; stroke-width: 1.5;" width="535" x="1036.5" y="677"/><ellipse cx="1266.75" cy="693" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1269.7188,698.6406 Q1269.1406,698.9375 1268.5,699.0781 Q1267.8594,699.2344 1267.1563,699.2344 Q1264.6563,699.2344 1263.3281,697.5938 Q1262.0156,695.9375 1262.0156,692.8125 Q1262.0156,689.6875 1263.3281,688.0313 Q1264.6563,686.375 1267.1563,686.375 Q1267.8594,686.375 1268.5,686.5313 Q1269.1563,686.6875 1269.7188,686.9844 L1269.7188,689.7031 Q1269.0938,689.125 1268.5,688.8594 Q1267.9063,688.5781 1267.2813,688.5781 Q1265.9375,688.5781 1265.25,689.6563 Q1264.5625,690.7188 1264.5625,692.8125 Q1264.5625,694.9063 1265.25,695.9844 Q1265.9375,697.0469 1267.2813,697.0469 Q1267.9063,697.0469 1268.5,696.7813 Q1269.0938,696.5 1269.7188,695.9219 L1269.7188,698.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="66" x="1287.25" y="697.1543">HTTPClient</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1037.5" x2="1570.5" y1="709" y2="709"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1044.5" y="717.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="1056.5" y="723.2104">_tcpSocket: std::shared_ptr&lt;TCPSocket&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1044.5" y="730.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="1056.5" y="736.0151">_httpRequest: std::unique_ptr&lt;HTTPRequest&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1044.5" y="743.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1056.5" y="748.8198">_httpResponse: std::unique_ptr&lt;HTTPResponse&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1044.5" y="756.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="1056.5" y="761.6245">_httpHeaders: std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt;</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1060.5" y="774.4292"/><ellipse cx="1047.5" cy="784.9258" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1056.5" y="787.2339">statusCode : size_t</text><ellipse cx="1047.5" cy="797.7305" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="1056.5" y="800.0386">reasonPhrase: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1037.5" x2="1570.5" y1="806.6328" y2="806.6328"/><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1044.5" y="815.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="509" x="1056.5" y="820.8433">prepareRequest(const std::string &amp;url, Method method, const std::string &amp;data=""): void</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1044.5" y="828.3398"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1056.5" y="833.6479">processResponse(): bool</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1060.5" y="846.4526"/><ellipse cx="1047.5" cy="856.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="1056.5" y="859.2573">HTTPClient()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1060.5" y="872.062"/><ellipse cx="1047.5" cy="882.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="1056.5" y="884.8667">setHTTPHeader(const std::string &amp;headerName, const std::string &amp;headerContent): void</text><ellipse cx="1047.5" cy="895.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="1056.5" y="897.6714">get(const std::string &amp;url, int port=80): std::string</text><ellipse cx="1047.5" cy="908.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="436" x="1056.5" y="910.4761">post(const std::string &amp;url, const std::string &amp;data, int port=80): std::string</text><!--class HTTPMSGSchema--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="368.1172" id="HTTPMSGSchema" style="stroke: #A80036; stroke-width: 1.5;" width="565" x="38.5" y="613"/><ellipse cx="262.75" cy="629" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M265.7188,634.6406 Q265.1406,634.9375 264.5,635.0781 Q263.8594,635.2344 263.1563,635.2344 Q260.6563,635.2344 259.3281,633.5938 Q258.0156,631.9375 258.0156,628.8125 Q258.0156,625.6875 259.3281,624.0313 Q260.6563,622.375 263.1563,622.375 Q263.8594,622.375 264.5,622.5313 Q265.1563,622.6875 265.7188,622.9844 L265.7188,625.7031 Q265.0938,625.125 264.5,624.8594 Q263.9063,624.5781 263.2813,624.5781 Q261.9375,624.5781 261.25,625.6563 Q260.5625,626.7188 260.5625,628.8125 Q260.5625,630.9063 261.25,631.9844 Q261.9375,633.0469 263.2813,633.0469 Q263.9063,633.0469 264.5,632.7813 Q265.0938,632.5 265.7188,631.9219 L265.7188,634.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="108" x="283.25" y="633.1543">HTTPMSGSchema</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="602.5" y1="645" y2="645"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="653.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="334" x="58.5" y="659.2104">_httpData, _body, _messageType, _formParam: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="666.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="58.5" y="672.0151">_httpMethod: Method</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="679.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="58.5" y="684.8198">_protocol: Protocol</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="692.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="58.5" y="697.6245">_httpHeaders: std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="602.5" y1="704.2188" y2="704.2188"/><ellipse cx="49.5" cy="716.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="58.5" y="718.4292">HTTPMSGSchema(const std::string &amp;messageType)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62.5" y="731.2339"/><ellipse cx="49.5" cy="741.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="58.5" y="744.0386">print() const: void</text><ellipse cx="49.5" cy="754.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="58.5" y="756.8433">addHTTPData(const std::string &amp;data): void</text><ellipse cx="49.5" cy="767.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="58.5" y="769.6479">getHTTPData() const: std::string</text><ellipse cx="49.5" cy="780.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="58.5" y="782.4526">getHTTPDataSize() const: size_t</text><ellipse cx="49.5" cy="792.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="199" x="58.5" y="795.2573">setProtocol(Protocol protocol): void</text><ellipse cx="49.5" cy="805.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="58.5" y="808.062">getProtocol() const: Protocol</text><ellipse cx="49.5" cy="818.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="58.5" y="820.8667">addBody(const std::string &amp;body)</text><ellipse cx="49.5" cy="831.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="156" x="58.5" y="833.6714">getBody() const: std::string</text><ellipse cx="49.5" cy="844.168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="58.5" y="846.4761">getBodyLength() const: size_t</text><ellipse cx="49.5" cy="856.9727" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="508" x="58.5" y="859.2808">setHTTPHeader(const std::string &amp;headerName, const std::string &amp;headerContent): void</text><ellipse cx="49.5" cy="869.7773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="379" x="58.5" y="872.0854">getHTTPHeader(const std::string &amp;headerName) const: std::string</text><ellipse cx="49.5" cy="882.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="519" x="58.5" y="884.8901">addHTTPHeaderVector(std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt; &amp;headerVec): void</text><ellipse cx="49.5" cy="895.3867" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="58.5" y="897.6948">getHTTPHeadersSize() const: size_t</text><ellipse cx="49.5" cy="908.1914" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="414" x="58.5" y="910.4995">setFormParam(const std::string &amp;param, const std::string &amp;value): void</text><ellipse cx="49.5" cy="920.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="58.5" y="923.3042">getFormParam() const: std::string</text><ellipse cx="49.5" cy="933.8008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="539" x="58.5" y="936.1089">addFormParamVector(std::vector&lt; std::pair&lt;std::string, std::string&gt; &gt; &amp;formParamVec): void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62.5" y="948.9136"/><ellipse cx="49.5" cy="959.4102" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="58.5" y="961.7183">parseIncoming() = 0: void</text><ellipse cx="49.5" cy="972.2148" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="58.5" y="974.5229">prepareOutgoing() = 0: void</text><!--class HTTPRequest--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="201.6563" id="HTTPRequest" style="stroke: #A80036; stroke-width: 1.5;" width="308" x="404" y="1058"/><ellipse cx="512.25" cy="1074" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M515.2188,1079.6406 Q514.6406,1079.9375 514,1080.0781 Q513.3594,1080.2344 512.6563,1080.2344 Q510.1563,1080.2344 508.8281,1078.5938 Q507.5156,1076.9375 507.5156,1073.8125 Q507.5156,1070.6875 508.8281,1069.0313 Q510.1563,1067.375 512.6563,1067.375 Q513.3594,1067.375 514,1067.5313 Q514.6563,1067.6875 515.2188,1067.9844 L515.2188,1070.7031 Q514.5938,1070.125 514,1069.8594 Q513.4063,1069.5781 512.7813,1069.5781 Q511.4375,1069.5781 510.75,1070.6563 Q510.0625,1071.7188 510.0625,1073.8125 Q510.0625,1075.9063 510.75,1076.9844 Q511.4375,1078.0469 512.7813,1078.0469 Q513.4063,1078.0469 514,1077.7813 Q514.5938,1077.5 515.2188,1076.9219 L515.2188,1079.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="83" x="532.75" y="1078.1543">HTTPRequest</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="405" x2="711" y1="1090" y2="1090"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="412" y="1098.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="424" y="1104.2104">_url, _userAgent: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="405" x2="711" y1="1110.8047" y2="1110.8047"/><ellipse cx="415" cy="1122.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="424" y="1125.0151">HTTPRequest()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="428" y="1137.8198"/><ellipse cx="415" cy="1148.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="424" y="1150.6245">setMethod(Method &amp;method): void</text><ellipse cx="415" cy="1161.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="424" y="1163.4292">getMethod() const: Method</text><ellipse cx="415" cy="1173.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="424" y="1176.2339">setURL(const std::string &amp;url): void</text><ellipse cx="415" cy="1186.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="424" y="1189.0386">getURL() const: std::string</text><ellipse cx="415" cy="1199.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="282" x="424" y="1201.8433">setUserAgent(const std::string &amp;userAgent): void</text><ellipse cx="415" cy="1212.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="424" y="1214.6479">getUserAgent() const: std::string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="428" y="1227.4526"/><ellipse cx="415" cy="1237.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="424" y="1240.2573">parseIncoming(): void</text><ellipse cx="415" cy="1250.7539" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="424" y="1253.062">prepareOutgoing(): void</text><!--class HTTPResponse--><rect fill="#FEFECE" filter="url(#f12vo11ztxni9z)" height="188.8516" id="HTTPResponse" style="stroke: #A80036; stroke-width: 1.5;" width="266" x="747" y="1064.5"/><ellipse cx="829.25" cy="1080.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M832.2188,1086.1406 Q831.6406,1086.4375 831,1086.5781 Q830.3594,1086.7344 829.6563,1086.7344 Q827.1563,1086.7344 825.8281,1085.0938 Q824.5156,1083.4375 824.5156,1080.3125 Q824.5156,1077.1875 825.8281,1075.5313 Q827.1563,1073.875 829.6563,1073.875 Q830.3594,1073.875 831,1074.0313 Q831.6563,1074.1875 832.2188,1074.4844 L832.2188,1077.2031 Q831.5938,1076.625 831,1076.3594 Q830.4063,1076.0781 829.7813,1076.0781 Q828.4375,1076.0781 827.75,1077.1563 Q827.0625,1078.2188 827.0625,1080.3125 Q827.0625,1082.4063 827.75,1083.4844 Q828.4375,1084.5469 829.7813,1084.5469 Q830.4063,1084.5469 831,1084.2813 Q831.5938,1084 832.2188,1083.4219 L832.2188,1086.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="849.75" y="1084.6543">HTTPResponse</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="748" x2="1012" y1="1096.5" y2="1096.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="755" y="1105.4023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="767" y="1110.7104">_reasonPhrase: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="755" y="1118.207"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="767" y="1123.5151">_statusCode: size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="748" x2="1012" y1="1130.1094" y2="1130.1094"/><ellipse cx="758" cy="1142.0117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="767" y="1144.3198">HTTPResponse()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="771" y="1157.1245"/><ellipse cx="758" cy="1167.6211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="224" x="767" y="1169.9292">setStatusCode(size_t statusCode): void</text><ellipse cx="758" cy="1180.4258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="767" y="1182.7339">getStatusCode() const: size_t</text><ellipse cx="758" cy="1193.2305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="767" y="1195.5386">setReasonPhrase(size_t statusCode): void</text><ellipse cx="758" cy="1206.0352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="767" y="1208.3433">getReasonPhrase() const: std::string</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="771" y="1221.1479"/><ellipse cx="758" cy="1231.6445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="767" y="1233.9526">parseIncoming(): void</text><ellipse cx="758" cy="1244.4492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="767" y="1246.7573">prepareOutgoing(): void</text><!--entity ##10--><!--link Socket to TCPSocket--><path d="M1062,357.37 C1062,371.51 1062,385.27 1062,397.97 " fill="none" id="Socket-TCPSocket" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1055,357.19,1062,337.19,1069,357.19,1055,357.19" style="stroke: #A80036; stroke-width: 1.0;"/><!--link TCPSocket to HTTPServer--><path d="M1003.77,546.92 C979.23,580.18 949.93,619.9 922.01,657.74 " fill="none" id="TCPSocket-HTTPServer" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1011.56,536.36,1004.7808,538.8182,1004.4425,546.0213,1011.2217,543.5632,1011.56,536.36" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="984" y="579.0669">«uses»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="982.6563" y="555.7764">1..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="919.3699" y="646.7713">1</text><!--link TCPSocket to HTTPClient--><path d="M1120.36,547.1 C1149.08,586.03 1184.3,633.77 1216.2,676.99 " fill="none" id="TCPSocket-HTTPClient" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1112.44,536.36,1112.7783,543.5632,1119.5575,546.0213,1119.2192,538.8182,1112.44,536.36" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="46" x="1141" y="579.0669">«uses»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1093.1515" y="555.7764">1..*</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1202.3191" y="665.8903">1</text><!--link HTTPServer to HTTPRequest--><path d="M719.45,936.16 C692.71,972.9 664.17,1012.11 638.64,1047.19 " fill="none" id="HTTPServer-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="630.82,1057.94,637.5834,1055.4386,637.8757,1048.2335,631.1123,1050.7348,630.82,1057.94" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="658" y="1024.0669">«processes»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="705.4057" y="956.6955">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="612.3232" y="1047.052">1..*</text><!--link HTTPServer to HTTPResponse--><path d="M843.03,936.16 C849.38,974.3 856.18,1015.1 862.2,1051.17 " fill="none" id="HTTPServer-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="864.37,1064.24,867.3327,1057.6656,862.4036,1052.4022,859.4409,1058.9766,864.37,1064.24" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="858" y="1024.0669">«sends»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="836.1302" y="956.6955">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="839.2929" y="1053.4884">1..*</text><!--link HTTPClient to HTTPRequest--><path d="M1144.47,917.21 C1078.66,959.96 999.51,1003.59 921,1028 C838.95,1053.52 810.98,1029.25 730,1058 C728.17,1058.65 726.34,1059.32 724.5,1060.01 " fill="none" id="HTTPClient-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="712.38,1064.81,719.4312,1066.32,723.5371,1060.392,716.4859,1058.882,712.38,1064.81" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="54" x="967" y="1024.0669">«sends»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1126.5049" y="937.0611">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="715.9492" y="1054.4603">1..*</text><!--link HTTPClient to HTTPResponse--><path d="M1248.18,917.25 C1225.6,956.24 1196.6,997.35 1162,1028 C1122.74,1062.77 1072.59,1089.89 1025.51,1110.15 " fill="none" id="HTTPClient-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1013.29,1115.28,1020.3717,1116.6401,1024.3509,1110.6263,1017.2692,1109.2662,1013.29,1115.28" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="81" x="1178" y="1024.0669">«processes»</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="8" x="1236.5347" y="937.1036">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="23" x="1021.2082" y="1109.5535">1..*</text><!--link HTTPMSGSchema to HTTPRequest--><path d="M452.76,998.15 C466.34,1018.76 479.67,1039.02 492.05,1057.82 " fill="none" id="HTTPMSGSchema-HTTPRequest" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="446.73,1001.72,441.58,981.16,458.43,994.02,446.73,1001.72" style="stroke: #A80036; stroke-width: 1.0;"/><!--link HTTPMSGSchema to HTTPResponse--><path d="M622.39,980.6 C679.28,999.44 702.8,984.18 748,1011 C771.3,1024.83 792.79,1044.12 811.37,1064.19 " fill="none" id="HTTPMSGSchema-HTTPResponse" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="619.89,987.13,603.6,973.57,624.79,974.02,619.89,987.13" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

package butterfly #DDDDDD
{

class Socket
{
    - _socketDomain, _socketType, _socketProtocol: int
    # _fd: int
    # _addr: sockaddr_in

    + Socket(int domain, int type, int protocol)
    + Socket(int fileDescriptor, int domain, int type, int protocol)

    + getFileDescriptor() const: int
    + shutdown() const: bool
    + setOptions() const: bool
    + setBlocking() const: bool
    + setNonBlocking() const: bool

    + bind(unsigned int port): bool
    + listen() const: bool
    + accept(): std::shared_ptr<Socket>
    + connect(const std::string& host, const int port): bool
    + disconnect() const: bool
    + hostnameToIP(const std::string &hostname, std::string &ip): int
}

class TCPSocket
{

    + TCPSocket()
    + TCPSocket(int fileDescriptor)

    + accept(): std::shared_ptr<TCPSocket>
    + send(const std::string& s) const: bool
    + recv(char *buf,int len) const: int
    + recvAll(int chunkSize, bool blocking=false) const: std::string
}


class HTTPServer
{
    - _port: unsigned int port
    - _running: std::atomic<bool>
    - _TCPSocket, _newTCPSocket: std::shared_ptr<TCPSocket>
    - _httpRequest: std::unique_ptr<HTTPRequest>
    - _httpResponse: std::unique_ptr<HTTPResponse>
    - _serverThread: std::thread

    + HTTPServer(unsigned int port)

    - handleRequest(): bool
    - processRequest(): void
    - sendResponse(): bool
    - browserRoute(): void
    - successResponse(size_t statusCode): void
    - errorResponse((size_t statusCode): void
    - _run(): void

    + run(bool blocking=false): void
    + stop(): void
}

class HTTPClient
{
    - _tcpSocket: std::shared_ptr<TCPSocket>
    - _httpRequest: std::unique_ptr<HTTPRequest>
    - _httpResponse: std::unique_ptr<HTTPResponse>
    - _httpHeaders: std::vector< std::pair<std::string, std::string> >

    + statusCode : size_t
    + reasonPhrase: std::string

    - prepareRequest(const std::string &url, Method method, const std::string &data=""): void
    - processResponse(): bool

    + HTTPClient()

    + setHTTPHeader(const std::string &headerName, const std::string &headerContent): void
    + get(const std::string &url, int port=80): std::string
    + post(const std::string &url, const std::string &data, int port=80): std::string
}

class HTTPMSGSchema
{
    - _httpData, _body, _messageType, _formParam: std::string
    - _httpMethod: Method
    - _protocol: Protocol
    - _httpHeaders: std::vector< std::pair<std::string, std::string> >

    + HTTPMSGSchema(const std::string &messageType)

    + print() const: void
    + addHTTPData(const std::string &data): void
    + getHTTPData() const: std::string
    + getHTTPDataSize() const: size_t
    + setProtocol(Protocol protocol): void
    + getProtocol() const: Protocol
    + addBody(const std::string &body)
    + getBody() const: std::string
    + getBodyLength() const: size_t
    + setHTTPHeader(const std::string &headerName, const std::string &headerContent): void
    + getHTTPHeader(const std::string &headerName) const: std::string
    + addHTTPHeaderVector(std::vector< std::pair<std::string, std::string> > &headerVec): void
    + getHTTPHeadersSize() const: size_t
    + setFormParam(const std::string &param, const std::string &value): void
    + getFormParam() const: std::string
    + addFormParamVector(std::vector< std::pair<std::string, std::string> > &formParamVec): void

    + parseIncoming() = 0: void
    + prepareOutgoing() = 0: void
}

class HTTPRequest
{
    - _url, _userAgent: std::string

    + HTTPRequest()

    + setMethod(Method &method): void
    + getMethod() const: Method
    + setURL(const std::string &url): void
    + getURL() const: std::string
    + setUserAgent(const std::string &userAgent): void
    + getUserAgent() const: std::string

    + parseIncoming(): void
    + prepareOutgoing(): void
}

class HTTPResponse
{
    - _reasonPhrase: std::string
    - _statusCode: size_t

    + HTTPResponse()

    + setStatusCode(size_t statusCode): void
    + getStatusCode() const: size_t
    + setReasonPhrase(size_t statusCode): void
    + getReasonPhrase() const: std::string

    + parseIncoming(): void
    + prepareOutgoing(): void
}

together {
    class HTTPServer
    class HTTPClient
}

Socket            <|- - TCPSocket
TCPSocket "1..*"  o- -  "1" HTTPServer : <<uses>>
TCPSocket "1..*"  o- -  "1" HTTPClient : <<uses>>

HTTPServer "1"    - -* "1..*" HTTPRequest: <<processes>>
HTTPServer "1"    - -* "1..*" HTTPResponse: <<sends>>

HTTPClient "1"    - -* "1..*" HTTPRequest: <<sends>>
HTTPClient "1"    - -* "1..*" HTTPResponse: <<processes>>

HTTPMSGSchema <|- - HTTPRequest
HTTPMSGSchema <|- - HTTPResponse

}
@enduml

PlantUML version 1.2018.13(Mon Nov 26 18:11:51 CET 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.15+10-Ubuntu-0ubuntu0.20.04.1
Operating System: Linux
OS Version: 5.13.0-40-generic
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>