@startuml
!include aes.puml
!include rsa.puml

package butterfly #AAAAAA
{

package hybrid #DDDDDD
{
    class Encryptor
    {
        - _keySize: int
        - _aesKeyInit: bool
        - _threads: std::vector<std::thread>
        - _rsaEncryptorCPrivateRSA, _rsaEncryptorAESKey: std::unique_ptr<rsa::RSAEncryptor>
        - _aesEncryptor: std::unique_ptr<aes::AESEncryptor>

        - validateAESKeyLength(): void
        - {static} saveUnencryptedAESKeyPair(const std::string &aesKeyPair): void
        - {static} checkIfEncryptionFilesExists(): void

        + Encryptor(int keySize = 2048)

        + invokeDir(const std::string &dirPath, bool protection): void
        + encryptCPrivateRSA(): void
        + encryptFileWithAES(const std::string &filepath): void
        + encryptFinalAESKeyWithRSA(const std::string &aesKeyStr, const std::string &filename): void
        + spawnThread(const std::string &filepath): void
        + joinThreads(): void
    }

    class Decryptor
    {
        - _decryptedCPrivateRSA: std::string
        - _threads: std::vector<std::thread>
        - _rsaDecryptorCPrivateRSA: std::unique_ptr<rsa::RSADecryptor>
        - _aesDecryptor: std::unique_ptr<aes::AESDecryptor>

        - {static} removeDecryptedFiles(): void
        - {static} getAESKeyPairFromUnencryptedFile(std::string &aesKeyPair): bool

        + Decryptor()

        + setDecryptedCPrivateRSAStr(const std::string &decryptedCPrivateRSA): void
        + invokeDir(const std::string &dirPath): void
        + decryptCPrivateRSA(const std::string &pkeyFromServer, const std::string &encCPrivateRSAFile): void
        + decryptAESKeyPair(const std::string &filepathAESKey, std::string &decAESKey,  std::string &decAESIV): void
        + decryptFileWithAES(const std::string &filepath): void
        + spawnThread(const std::string &filepath): void
        + joinThreads(): void
    }
}

together {
  class CryptoRSA
  class CryptoAES
}

together {
class RSAEncryptor
class RSADecryptor
class AESEncryptor
class AESDecryptor
}

together {
  class Encryptor
  class Decryptor
}

RSAEncryptor "1..*" o-- "1" Encryptor: <<encrypting keys>>
AESEncryptor "1..*" o-- "1" Encryptor: <<encrypting files>>

RSADecryptor "1..*" o-- "1" Decryptor: <<decrypting keys>>
AESDecryptor "1..*" o-- "1" Decryptor: <<decrypting files>>

}
@enduml