<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="512px" preserveAspectRatio="none" style="width:698px;height:512px;" version="1.1" viewBox="0 0 698 512" width="698px" zoomAndPan="magnify"><defs><filter height="300%" id="flh2wcn3bs0le" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster butterfly--><polygon fill="#DDDDDD" filter="url(#flh2wcn3bs0le)" points="22,24,96,24,103,46.2969,676,46.2969,676,500,22,500,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="103" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="68" x="26" y="38.9951">butterfly</text><!--class SQLDatabase--><rect fill="#FEFECE" filter="url(#flh2wcn3bs0le)" height="227.2656" id="SQLDatabase" style="stroke: #A80036; stroke-width: 1.5;" width="623" x="37.5" y="59"/><ellipse cx="302.75" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M305.7188,80.6406 Q305.1406,80.9375 304.5,81.0781 Q303.8594,81.2344 303.1563,81.2344 Q300.6563,81.2344 299.3281,79.5938 Q298.0156,77.9375 298.0156,74.8125 Q298.0156,71.6875 299.3281,70.0313 Q300.6563,68.375 303.1563,68.375 Q303.8594,68.375 304.5,68.5313 Q305.1563,68.6875 305.7188,68.9844 L305.7188,71.7031 Q305.0938,71.125 304.5,70.8594 Q303.9063,70.5781 303.2813,70.5781 Q301.9375,70.5781 301.25,71.6563 Q300.5625,72.7188 300.5625,74.8125 Q300.5625,76.9063 301.25,77.9844 Q301.9375,79.0469 303.2813,79.0469 Q303.9063,79.0469 304.5,78.7813 Q305.0938,78.5 305.7188,77.9219 L305.7188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="84" x="323.25" y="79.1543">SQLDatabase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38.5" x2="659.5" y1="91" y2="91"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45.5" y="99.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="57.5" y="105.2104">_db: sqlite3*</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45.5" y="112.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="57.5" y="118.0151">_dbname: std::string</text><polygon fill="none" points="48.5,123.5117,52.5,127.5117,48.5,131.5117,44.5,127.5117" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="57.5" y="130.8198">_dbpath, _dbtable: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38.5" x2="659.5" y1="137.4141" y2="137.4141"/><polygon fill="#FFFF44" points="48.5,144.3164,52.5,148.3164,48.5,152.3164,44.5,148.3164" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="390" x="57.5" y="151.6245">SQLDatabase(const std::string &amp;dbpath, const std::string &amp;dbtable)</text><ellipse cx="48.5" cy="162.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="57.5" y="164.4292">SQLDatabase()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="61.5" y="177.2339"/><ellipse cx="48.5" cy="187.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="57.5" y="190.0386">setMode(int mode): bool</text><ellipse cx="48.5" cy="200.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="57.5" y="202.8433">open(const std::string &amp;dbpath): bool</text><ellipse cx="48.5" cy="213.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="57.5" y="215.6479">close(): bool</text><ellipse cx="48.5" cy="226.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="349" x="57.5" y="228.4526">query(const std::string &amp;query, int (*callback)(void*, int, char</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="36" x="406.5" y="228.4526">, char</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="442.5" y="228.4526">) = nullptr, void *data = nullptr): bool</text><ellipse cx="48.5" cy="238.9492" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="57.5" y="241.2573">print() const: void</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="61.5" y="254.062"/><ellipse cx="48.5" cy="264.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="469" x="57.5" y="266.8667">printDatabaseCallback(void *data, int argc, char *azData[], char *azColName[]): int</text><ellipse cx="48.5" cy="277.3633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="476" x="57.5" y="279.6714">getColumnDataCallback(void *data, int argc, char *azData[], char *azColName[]): int</text><!--class AESKeyDatabase--><rect fill="#FEFECE" filter="url(#flh2wcn3bs0le)" height="137.6328" id="AESKeyDatabase" style="stroke: #A80036; stroke-width: 1.5;" width="601" x="48.5" y="346"/><ellipse cx="291.75" cy="362" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M294.7188,367.6406 Q294.1406,367.9375 293.5,368.0781 Q292.8594,368.2344 292.1563,368.2344 Q289.6563,368.2344 288.3281,366.5938 Q287.0156,364.9375 287.0156,361.8125 Q287.0156,358.6875 288.3281,357.0313 Q289.6563,355.375 292.1563,355.375 Q292.8594,355.375 293.5,355.5313 Q294.1563,355.6875 294.7188,355.9844 L294.7188,358.7031 Q294.0938,358.125 293.5,357.8594 Q292.9063,357.5781 292.2813,357.5781 Q290.9375,357.5781 290.25,358.6563 Q289.5625,359.7188 289.5625,361.8125 Q289.5625,363.9063 290.25,364.9844 Q290.9375,366.0469 292.2813,366.0469 Q292.9063,366.0469 293.5,365.7813 Q294.0938,365.5 294.7188,364.9219 L294.7188,367.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="106" x="312.25" y="366.1543">AESKeyDatabase</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="49.5" x2="648.5" y1="378" y2="378"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="56.5" y="386.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="68.5" y="392.2104">_aesKeyTableSQL: std::string</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="56.5" y="399.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="68.5" y="405.0151">_removeDatabase: bool</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="49.5" x2="648.5" y1="411.6094" y2="411.6094"/><ellipse cx="59.5" cy="423.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="575" x="68.5" y="425.8198">AESKeyDatabase(const std::string &amp;dbpath, bool removeDatabase=false, std::string dbtable="AES")</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="72.5" y="438.6245"/><ellipse cx="59.5" cy="449.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="554" x="68.5" y="451.4292">insertEntry(const std::string &amp;filepath, const std::string &amp;aesKey, const std::string &amp;aesIv): void</text><ellipse cx="59.5" cy="461.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="351" x="68.5" y="464.2339">getEntry(const std::string &amp;filepath): std::vector&lt;std::string&gt;</text><ellipse cx="59.5" cy="474.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="68.5" y="477.0386">deleteEntry(const std::string &amp;filepath)): void</text><!--link SQLDatabase to AESKeyDatabase--><path d="M349,306.11 C349,319.79 349,333.25 349,345.78 " fill="none" id="SQLDatabase-AESKeyDatabase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="342,306,349,286,356,306,342,306" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

package butterfly #DDDDDD
{

class SQLDatabase
{
    -_db: sqlite3*
    -_dbname: std::string
    #_dbpath, _dbtable: std::string

    #SQLDatabase(const std::string &dbpath, const std::string &dbtable)
    +SQLDatabase()

    +setMode(int mode): bool
    +open(const std::string &dbpath): bool
    +close(): bool
    +query(const std::string &query, int (*callback)(void*, int, char**, char**) = nullptr, void *data = nullptr): bool
    +print() const: void

    +printDatabaseCallback(void *data, int argc, char *azData[], char *azColName[]): int
    +getColumnDataCallback(void *data, int argc, char *azData[], char *azColName[]): int
}

class AESKeyDatabase
{
    -_aesKeyTableSQL: std::string
    -_removeDatabase: bool

    +AESKeyDatabase(const std::string &dbpath, bool removeDatabase=false, std::string dbtable="AES")

    +insertEntry(const std::string &filepath, const std::string &aesKey, const std::string &aesIv): void
    +getEntry(const std::string &filepath): std::vector<std::string>
    +deleteEntry(const std::string &filepath)): void
}

SQLDatabase <|- - AESKeyDatabase

}
@enduml

PlantUML version 1.2018.13(Mon Nov 26 18:11:51 CET 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.11+9-Ubuntu-0ubuntu2.20.04
Operating System: Linux
OS Version: 5.11.0-27-generic
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>