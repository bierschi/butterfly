<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="599px" preserveAspectRatio="none" style="width:2271px;height:599px;" version="1.1" viewBox="0 0 2271 599" width="2271px" zoomAndPan="magnify"><defs><filter height="300%" id="fsv2c3kltbfq7" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--cluster butterfly--><polygon fill="#DDDDDD" filter="url(#fsv2c3kltbfq7)" points="22,24,96,24,103,46.2969,2249,46.2969,2249,587,22,587,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="103" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="68" x="26" y="38.9951">butterfly</text><!--class std::exception--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="48" id="std::exception" style="stroke: #A80036; stroke-width: 1.5;" width="121" x="1076.5" y="59"/><ellipse cx="1091.5" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1094.4688,80.6406 Q1093.8906,80.9375 1093.25,81.0781 Q1092.6094,81.2344 1091.9063,81.2344 Q1089.4063,81.2344 1088.0781,79.5938 Q1086.7656,77.9375 1086.7656,74.8125 Q1086.7656,71.6875 1088.0781,70.0313 Q1089.4063,68.375 1091.9063,68.375 Q1092.6094,68.375 1093.25,68.5313 Q1093.9063,68.6875 1094.4688,68.9844 L1094.4688,71.7031 Q1093.8438,71.125 1093.25,70.8594 Q1092.6563,70.5781 1092.0313,70.5781 Q1090.6875,70.5781 1090,71.6563 Q1089.3125,72.7188 1089.3125,74.8125 Q1089.3125,76.9063 1090,77.9844 Q1090.6875,79.0469 1092.0313,79.0469 Q1092.6563,79.0469 1093.25,78.7813 Q1093.8438,78.5 1094.4688,77.9219 L1094.4688,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="1105.5" y="79.1543">std::exception</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1077.5" x2="1196.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1077.5" x2="1196.5" y1="99" y2="99"/><!--class ButterflyException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="112.0234" id="ButterflyException" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="1000.5" y="167"/><ellipse cx="1076.25" cy="183" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1079.2188,188.6406 Q1078.6406,188.9375 1078,189.0781 Q1077.3594,189.2344 1076.6563,189.2344 Q1074.1563,189.2344 1072.8281,187.5938 Q1071.5156,185.9375 1071.5156,182.8125 Q1071.5156,179.6875 1072.8281,178.0313 Q1074.1563,176.375 1076.6563,176.375 Q1077.3594,176.375 1078,176.5313 Q1078.6563,176.6875 1079.2188,176.9844 L1079.2188,179.7031 Q1078.5938,179.125 1078,178.8594 Q1077.4063,178.5781 1076.7813,178.5781 Q1075.4375,178.5781 1074.75,179.6563 Q1074.0625,180.7188 1074.0625,182.8125 Q1074.0625,184.9063 1074.75,185.9844 Q1075.4375,187.0469 1076.7813,187.0469 Q1077.4063,187.0469 1078,186.7813 Q1078.5938,186.5 1079.2188,185.9219 L1079.2188,188.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="1096.75" y="187.1543">ButterflyException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1001.5" x2="1272.5" y1="199" y2="199"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1008.5" y="207.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="1020.5" y="213.2104">_error: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1001.5" x2="1272.5" y1="219.8047" y2="219.8047"/><ellipse cx="1011.5" cy="231.707" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1020.5" y="234.0151">ButterflyException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1024.5" y="246.8198"/><ellipse cx="1011.5" cy="257.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="1020.5" y="259.6245">what(): const char*</text><ellipse cx="1011.5" cy="270.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="1020.5" y="272.4292">virtual getType() const: std::string</text><!--class RSAEncryptionException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="RSAEncryptionException" style="stroke: #A80036; stroke-width: 1.5;" width="306" x="38" y="485"/><ellipse cx="111.25" cy="501" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M114.2188,506.6406 Q113.6406,506.9375 113,507.0781 Q112.3594,507.2344 111.6563,507.2344 Q109.1563,507.2344 107.8281,505.5938 Q106.5156,503.9375 106.5156,500.8125 Q106.5156,497.6875 107.8281,496.0313 Q109.1563,494.375 111.6563,494.375 Q112.3594,494.375 113,494.5313 Q113.6563,494.6875 114.2188,494.9844 L114.2188,497.7031 Q113.5938,497.125 113,496.8594 Q112.4063,496.5781 111.7813,496.5781 Q110.4375,496.5781 109.75,497.6563 Q109.0625,498.7188 109.0625,500.8125 Q109.0625,502.9063 109.75,503.9844 Q110.4375,505.0469 111.7813,505.0469 Q112.4063,505.0469 113,504.7813 Q113.5938,504.5 114.2188,503.9219 L114.2188,506.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="131.75" y="505.1543">RSAEncryptionException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="343" y1="517" y2="517"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="343" y1="525" y2="525"/><ellipse cx="49" cy="536.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="58" y="539.2104">RSAEncryptionException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62" y="552.0151"/><ellipse cx="49" cy="562.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="58" y="564.8198">getType() const: std::string</text><!--class RSADecryptionException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="RSADecryptionException" style="stroke: #A80036; stroke-width: 1.5;" width="307" x="720.5" y="485"/><ellipse cx="793.75" cy="501" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M796.7188,506.6406 Q796.1406,506.9375 795.5,507.0781 Q794.8594,507.2344 794.1563,507.2344 Q791.6563,507.2344 790.3281,505.5938 Q789.0156,503.9375 789.0156,500.8125 Q789.0156,497.6875 790.3281,496.0313 Q791.6563,494.375 794.1563,494.375 Q794.8594,494.375 795.5,494.5313 Q796.1563,494.6875 796.7188,494.9844 L796.7188,497.7031 Q796.0938,497.125 795.5,496.8594 Q794.9063,496.5781 794.2813,496.5781 Q792.9375,496.5781 792.25,497.6563 Q791.5625,498.7188 791.5625,500.8125 Q791.5625,502.9063 792.25,503.9844 Q792.9375,505.0469 794.2813,505.0469 Q794.9063,505.0469 795.5,504.7813 Q796.0938,504.5 796.7188,503.9219 L796.7188,506.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="814.25" y="505.1543">RSADecryptionException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="721.5" x2="1026.5" y1="517" y2="517"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="721.5" x2="1026.5" y1="525" y2="525"/><ellipse cx="731.5" cy="536.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="740.5" y="539.2104">RSADecryptionException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="744.5" y="552.0151"/><ellipse cx="731.5" cy="562.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="740.5" y="564.8198">getType() const: std::string</text><!--class AESEncryptionException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="AESEncryptionException" style="stroke: #A80036; stroke-width: 1.5;" width="306" x="379" y="485"/><ellipse cx="452.25" cy="501" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M455.2188,506.6406 Q454.6406,506.9375 454,507.0781 Q453.3594,507.2344 452.6563,507.2344 Q450.1563,507.2344 448.8281,505.5938 Q447.5156,503.9375 447.5156,500.8125 Q447.5156,497.6875 448.8281,496.0313 Q450.1563,494.375 452.6563,494.375 Q453.3594,494.375 454,494.5313 Q454.6563,494.6875 455.2188,494.9844 L455.2188,497.7031 Q454.5938,497.125 454,496.8594 Q453.4063,496.5781 452.7813,496.5781 Q451.4375,496.5781 450.75,497.6563 Q450.0625,498.7188 450.0625,500.8125 Q450.0625,502.9063 450.75,503.9844 Q451.4375,505.0469 452.7813,505.0469 Q453.4063,505.0469 454,504.7813 Q454.5938,504.5 455.2188,503.9219 L455.2188,506.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="151" x="472.75" y="505.1543">AESEncryptionException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="380" x2="684" y1="517" y2="517"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="380" x2="684" y1="525" y2="525"/><ellipse cx="390" cy="536.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="399" y="539.2104">AESEncryptionException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="403" y="552.0151"/><ellipse cx="390" cy="562.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="399" y="564.8198">getType() const: std::string</text><!--class AESDecryptionException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="AESDecryptionException" style="stroke: #A80036; stroke-width: 1.5;" width="307" x="1062.5" y="485"/><ellipse cx="1135.75" cy="501" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1138.7188,506.6406 Q1138.1406,506.9375 1137.5,507.0781 Q1136.8594,507.2344 1136.1563,507.2344 Q1133.6563,507.2344 1132.3281,505.5938 Q1131.0156,503.9375 1131.0156,500.8125 Q1131.0156,497.6875 1132.3281,496.0313 Q1133.6563,494.375 1136.1563,494.375 Q1136.8594,494.375 1137.5,494.5313 Q1138.1563,494.6875 1138.7188,494.9844 L1138.7188,497.7031 Q1138.0938,497.125 1137.5,496.8594 Q1136.9063,496.5781 1136.2813,496.5781 Q1134.9375,496.5781 1134.25,497.6563 Q1133.5625,498.7188 1133.5625,500.8125 Q1133.5625,502.9063 1134.25,503.9844 Q1134.9375,505.0469 1136.2813,505.0469 Q1136.9063,505.0469 1137.5,504.7813 Q1138.0938,504.5 1138.7188,503.9219 L1138.7188,506.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="1156.25" y="505.1543">AESDecryptionException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.5" x2="1368.5" y1="517" y2="517"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1063.5" x2="1368.5" y1="525" y2="525"/><ellipse cx="1073.5" cy="536.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1082.5" y="539.2104">AESDecryptionException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1086.5" y="552.0151"/><ellipse cx="1073.5" cy="562.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1082.5" y="564.8198">getType() const: std::string</text><!--class EncryptorException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="EncryptorException" style="stroke: #A80036; stroke-width: 1.5;" width="279" x="38.5" y="339"/><ellipse cx="113.25" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M116.2188,360.6406 Q115.6406,360.9375 115,361.0781 Q114.3594,361.2344 113.6563,361.2344 Q111.1563,361.2344 109.8281,359.5938 Q108.5156,357.9375 108.5156,354.8125 Q108.5156,351.6875 109.8281,350.0313 Q111.1563,348.375 113.6563,348.375 Q114.3594,348.375 115,348.5313 Q115.6563,348.6875 116.2188,348.9844 L116.2188,351.7031 Q115.5938,351.125 115,350.8594 Q114.4063,350.5781 113.7813,350.5781 Q112.4375,350.5781 111.75,351.6563 Q111.0625,352.7188 111.0625,354.8125 Q111.0625,356.9063 111.75,357.9844 Q112.4375,359.0469 113.7813,359.0469 Q114.4063,359.0469 115,358.7813 Q115.5938,358.5 116.2188,357.9219 L116.2188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="133.75" y="359.1543">EncryptorException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="316.5" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="316.5" y1="379" y2="379"/><ellipse cx="49.5" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="58.5" y="393.2104">EncryptorException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="62.5" y="406.0151"/><ellipse cx="49.5" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="58.5" y="418.8198">getType() const: std::string</text><!--class DecryptorException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="DecryptorException" style="stroke: #A80036; stroke-width: 1.5;" width="280" x="353" y="339"/><ellipse cx="427.75" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M430.7188,360.6406 Q430.1406,360.9375 429.5,361.0781 Q428.8594,361.2344 428.1563,361.2344 Q425.6563,361.2344 424.3281,359.5938 Q423.0156,357.9375 423.0156,354.8125 Q423.0156,351.6875 424.3281,350.0313 Q425.6563,348.375 428.1563,348.375 Q428.8594,348.375 429.5,348.5313 Q430.1563,348.6875 430.7188,348.9844 L430.7188,351.7031 Q430.0938,351.125 429.5,350.8594 Q428.9063,350.5781 428.2813,350.5781 Q426.9375,350.5781 426.25,351.6563 Q425.5625,352.7188 425.5625,354.8125 Q425.5625,356.9063 426.25,357.9844 Q426.9375,359.0469 428.2813,359.0469 Q428.9063,359.0469 429.5,358.7813 Q430.0938,358.5 430.7188,357.9219 L430.7188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="122" x="448.25" y="359.1543">DecryptorException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="354" x2="632" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="354" x2="632" y1="379" y2="379"/><ellipse cx="364" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="373" y="393.2104">DecryptorException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="377" y="406.0151"/><ellipse cx="364" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="373" y="418.8198">getType() const: std::string</text><!--class SQLDatabaseException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="SQLDatabaseException" style="stroke: #A80036; stroke-width: 1.5;" width="302" x="668" y="339"/><ellipse cx="742.25" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M745.2188,360.6406 Q744.6406,360.9375 744,361.0781 Q743.3594,361.2344 742.6563,361.2344 Q740.1563,361.2344 738.8281,359.5938 Q737.5156,357.9375 737.5156,354.8125 Q737.5156,351.6875 738.8281,350.0313 Q740.1563,348.375 742.6563,348.375 Q743.3594,348.375 744,348.5313 Q744.6563,348.6875 745.2188,348.9844 L745.2188,351.7031 Q744.5938,351.125 744,350.8594 Q743.4063,350.5781 742.7813,350.5781 Q741.4375,350.5781 740.75,351.6563 Q740.0625,352.7188 740.0625,354.8125 Q740.0625,356.9063 740.75,357.9844 Q741.4375,359.0469 742.7813,359.0469 Q743.4063,359.0469 744,358.7813 Q744.5938,358.5 745.2188,357.9219 L745.2188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="145" x="762.75" y="359.1543">SQLDatabaseException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="669" x2="969" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="669" x2="969" y1="379" y2="379"/><ellipse cx="679" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="688" y="393.2104">SQLDatabaseException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="692" y="406.0151"/><ellipse cx="679" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="688" y="418.8198">getType() const: std::string</text><!--class SocketException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="SocketException" style="stroke: #A80036; stroke-width: 1.5;" width="263" x="1005.5" y="339"/><ellipse cx="1080.75" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1083.7188,360.6406 Q1083.1406,360.9375 1082.5,361.0781 Q1081.8594,361.2344 1081.1563,361.2344 Q1078.6563,361.2344 1077.3281,359.5938 Q1076.0156,357.9375 1076.0156,354.8125 Q1076.0156,351.6875 1077.3281,350.0313 Q1078.6563,348.375 1081.1563,348.375 Q1081.8594,348.375 1082.5,348.5313 Q1083.1563,348.6875 1083.7188,348.9844 L1083.7188,351.7031 Q1083.0938,351.125 1082.5,350.8594 Q1081.9063,350.5781 1081.2813,350.5781 Q1079.9375,350.5781 1079.25,351.6563 Q1078.5625,352.7188 1078.5625,354.8125 Q1078.5625,356.9063 1079.25,357.9844 Q1079.9375,359.0469 1081.2813,359.0469 Q1081.9063,359.0469 1082.5,358.7813 Q1083.0938,358.5 1083.7188,357.9219 L1083.7188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="104" x="1101.25" y="359.1543">SocketException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1006.5" x2="1267.5" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1006.5" x2="1267.5" y1="379" y2="379"/><ellipse cx="1016.5" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="1025.5" y="393.2104">SocketException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1029.5" y="406.0151"/><ellipse cx="1016.5" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1025.5" y="418.8198">getType() const: std::string</text><!--class FileNotFoundException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="FileNotFoundException" style="stroke: #A80036; stroke-width: 1.5;" width="297" x="1303.5" y="339"/><ellipse cx="1376.25" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1379.2188,360.6406 Q1378.6406,360.9375 1378,361.0781 Q1377.3594,361.2344 1376.6563,361.2344 Q1374.1563,361.2344 1372.8281,359.5938 Q1371.5156,357.9375 1371.5156,354.8125 Q1371.5156,351.6875 1372.8281,350.0313 Q1374.1563,348.375 1376.6563,348.375 Q1377.3594,348.375 1378,348.5313 Q1378.6563,348.6875 1379.2188,348.9844 L1379.2188,351.7031 Q1378.5938,351.125 1378,350.8594 Q1377.4063,350.5781 1376.7813,350.5781 Q1375.4375,350.5781 1374.75,351.6563 Q1374.0625,352.7188 1374.0625,354.8125 Q1374.0625,356.9063 1374.75,357.9844 Q1375.4375,359.0469 1376.7813,359.0469 Q1377.4063,359.0469 1378,358.7813 Q1378.5938,358.5 1379.2188,357.9219 L1379.2188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="143" x="1396.75" y="359.1543">FileNotFoundException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1304.5" x2="1599.5" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1304.5" x2="1599.5" y1="379" y2="379"/><ellipse cx="1314.5" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="1323.5" y="393.2104">FileNotFoundException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1327.5" y="406.0151"/><ellipse cx="1314.5" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1323.5" y="418.8198">getType() const: std::string</text><!--class ConnectionException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="ConnectionException" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="1636" y="339"/><ellipse cx="1709.75" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1712.7188,360.6406 Q1712.1406,360.9375 1711.5,361.0781 Q1710.8594,361.2344 1710.1563,361.2344 Q1707.6563,361.2344 1706.3281,359.5938 Q1705.0156,357.9375 1705.0156,354.8125 Q1705.0156,351.6875 1706.3281,350.0313 Q1707.6563,348.375 1710.1563,348.375 Q1710.8594,348.375 1711.5,348.5313 Q1712.1563,348.6875 1712.7188,348.9844 L1712.7188,351.7031 Q1712.0938,351.125 1711.5,350.8594 Q1710.9063,350.5781 1710.2813,350.5781 Q1708.9375,350.5781 1708.25,351.6563 Q1707.5625,352.7188 1707.5625,354.8125 Q1707.5625,356.9063 1708.25,357.9844 Q1708.9375,359.0469 1710.2813,359.0469 Q1710.9063,359.0469 1711.5,358.7813 Q1712.0938,358.5 1712.7188,357.9219 L1712.7188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="132" x="1730.25" y="359.1543">ConnectionException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1637" x2="1923" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1637" x2="1923" y1="379" y2="379"/><ellipse cx="1647" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="1656" y="393.2104">ConnectionException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1660" y="406.0151"/><ellipse cx="1647" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1656" y="418.8198">getType() const: std::string</text><!--class BrowserException--><rect fill="#FEFECE" filter="url(#fsv2c3kltbfq7)" height="86.4141" id="BrowserException" style="stroke: #A80036; stroke-width: 1.5;" width="273" x="1959.5" y="339"/><ellipse cx="2036.25" cy="355" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2039.2188,360.6406 Q2038.6406,360.9375 2038,361.0781 Q2037.3594,361.2344 2036.6563,361.2344 Q2034.1563,361.2344 2032.8281,359.5938 Q2031.5156,357.9375 2031.5156,354.8125 Q2031.5156,351.6875 2032.8281,350.0313 Q2034.1563,348.375 2036.6563,348.375 Q2037.3594,348.375 2038,348.5313 Q2038.6563,348.6875 2039.2188,348.9844 L2039.2188,351.7031 Q2038.5938,351.125 2038,350.8594 Q2037.4063,350.5781 2036.7813,350.5781 Q2035.4375,350.5781 2034.75,351.6563 Q2034.0625,352.7188 2034.0625,354.8125 Q2034.0625,356.9063 2034.75,357.9844 Q2035.4375,359.0469 2036.7813,359.0469 Q2037.4063,359.0469 2038,358.7813 Q2038.5938,358.5 2039.2188,357.9219 L2039.2188,360.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="111" x="2056.75" y="359.1543">BrowserException</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1960.5" x2="2231.5" y1="371" y2="371"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1960.5" x2="2231.5" y1="379" y2="379"/><ellipse cx="1970.5" cy="390.9023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="1979.5" y="393.2104">BrowserException(const std::string &amp;error)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="0" x="1983.5" y="406.0151"/><ellipse cx="1970.5" cy="416.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1979.5" y="418.8198">getType() const: std::string</text><!--link std::exception to ButterflyException--><path d="M1137,127.25 C1137,139.82 1137,153.73 1137,166.93 " fill="none" id="std::exception-ButterflyException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1130,127.1,1137,107.1,1144,127.1,1130,127.1" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to EncryptorException--><path d="M980.2,241 C818.04,259.87 557.94,293.73 336,339 C330.02,340.22 323.93,341.53 317.79,342.91 " fill="none" id="ButterflyException-EncryptorException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="979.79,234,1000.46,238.66,981.39,247.91,979.79,234" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to DecryptorException--><path d="M980.73,259.83 C885.31,281.99 760.93,311.39 651,339 C645.22,340.45 639.32,341.95 633.37,343.47 " fill="none" id="ButterflyException-DecryptorException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="979.26,252.98,1000.33,255.28,982.43,266.62,979.26,252.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--link EncryptorException to RSAEncryptionException--><path d="M183.62,445.29 C184.82,458.58 186.06,472.33 187.18,484.66 " fill="none" id="EncryptorException-RSAEncryptionException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="176.62,445.59,181.8,425.04,190.57,444.33,176.62,445.59" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DecryptorException to RSADecryptionException--><path d="M623,432.13 C668.39,449.29 718.9,468.38 762.64,484.91 " fill="none" id="DecryptorException-RSADecryptionException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="620.46,438.66,604.23,425.04,625.41,425.56,620.46,438.66" style="stroke: #A80036; stroke-width: 1.0;"/><!--link EncryptorException to AESEncryptionException--><path d="M299.91,432.59 C341.8,449.63 388.25,468.53 428.53,484.91 " fill="none" id="EncryptorException-AESEncryptionException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="297.23,439.06,281.34,425.04,302.51,426.09,297.23,439.06" style="stroke: #A80036; stroke-width: 1.0;"/><!--link DecryptorException to AESDecryptionException--><path d="M652.87,425.16 C827.86,460.45 877.37,451.72 1045,485 C1050.7,486.13 1056.49,487.33 1062.33,488.57 " fill="none" id="DecryptorException-AESDecryptionException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="651.41,432.01,633.23,421.12,654.23,418.29,651.41,432.01" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to SQLDatabaseException--><path d="M1007.35,288.01 C972.55,305.19 935.81,323.33 904.11,338.98 " fill="none" id="ButterflyException-SQLDatabaseException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1004.3,281.71,1025.33,279.13,1010.5,294.26,1004.3,281.71" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to SocketException--><path d="M1137,299.61 C1137,313.16 1137,326.82 1137,338.97 " fill="none" id="ButterflyException-SocketException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1130,299.35,1137,279.35,1144,299.35,1130,299.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to FileNotFoundException--><path d="M1265.86,288.23 C1300.11,305.3 1336.23,323.3 1367.45,338.86 " fill="none" id="ButterflyException-FileNotFoundException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1262.39,294.32,1247.61,279.13,1268.64,281.79,1262.39,294.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to ConnectionException--><path d="M1293.4,260.6 C1387.56,282.83 1509.79,312.04 1618,339 C1623.78,340.44 1629.67,341.92 1635.62,343.42 " fill="none" id="ButterflyException-ConnectionException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1291.61,267.37,1273.75,255.96,1294.82,253.74,1291.61,267.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--link ButterflyException to BrowserException--><path d="M1293.92,240.56 C1456.89,259.13 1718.78,292.8 1942,339 C1947.7,340.18 1953.5,341.45 1959.35,342.78 " fill="none" id="ButterflyException-BrowserException" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1292.65,247.47,1273.56,238.26,1294.22,233.55,1292.65,247.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

package butterfly #DDDDDD
{

class std::exception
{

}

class ButterflyException
{
    - _error: std::string

    + ButterflyException(const std::string &error)

    + what(): const char*
    + virtual getType() const: std::string
}

class RSAEncryptionException
{

    + RSAEncryptionException(const std::string &error)

    + getType() const: std::string
}

class RSADecryptionException
{

    + RSADecryptionException(const std::string &error)

    + getType() const: std::string
}

class AESEncryptionException
{

    + AESEncryptionException(const std::string &error)

    + getType() const: std::string
}

class AESDecryptionException
{

    + AESDecryptionException(const std::string &error)

    + getType() const: std::string
}

class EncryptorException
{

    + EncryptorException(const std::string &error)

    + getType() const: std::string
}

class DecryptorException
{

    + DecryptorException(const std::string &error)

    + getType() const: std::string
}

class SQLDatabaseException
{

    + SQLDatabaseException(const std::string &error)

    + getType() const: std::string
}

class SocketException
{

    + SocketException(const std::string &error)

    + getType() const: std::string
}

class FileNotFoundException
{

    + FileNotFoundException(const std::string &error)

    + getType() const: std::string
}

class ConnectionException
{

    + ConnectionException(const std::string &error)

    + getType() const: std::string
}

class BrowserException
{

    + BrowserException(const std::string &error)

    + getType() const: std::string
}

std::exception <|- - ButterflyException
ButterflyException <|- - EncryptorException
ButterflyException <|- - DecryptorException

EncryptorException <|- - RSAEncryptionException
DecryptorException <|- - RSADecryptionException
EncryptorException <|- - AESEncryptionException
DecryptorException <|- - AESDecryptionException

ButterflyException <|- - SQLDatabaseException
ButterflyException <|- - SocketException
ButterflyException <|- - FileNotFoundException
ButterflyException <|- - ConnectionException
ButterflyException <|- - BrowserException

}
@enduml

PlantUML version 1.2018.13(Mon Nov 26 18:11:51 CET 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.15+10-Ubuntu-0ubuntu0.20.04.1
Operating System: Linux
OS Version: 5.13.0-40-generic
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>