@startuml
'https://plantuml.com/sequence-diagram

actor attacker
participant SPrivateRSA.pem as SPrivate
actor target
participant "SPublic.pem\n(embedded)" as SPublic
participant CPrivateRSA.pem as CPrivate
participant CPublic.pem as CPublic
participant "AESKey/AESIV" as AESKey
participant File
'participant AESKeySQL.sql as AESKeySQL

autonumber
hnote over SPrivate, SPublic: Server RSA Key pair (**Keysize: 13768**)
hnote over CPrivate, CPublic: Client RSA Key pair (**Keysize: 2048**)
hnote over AESKey: 256-Bit-AESKey/128-Bit-AESIV
attacker -> attacker: generate the RSA\n server key pair
...
attacker -> target: compromise the target host machine
target -> target: generate an infection specific\n client RSA key pair
target -> CPrivate: encrypt the **CPrivateRSA.pem** with the\n embedded **SPublic.pem** in the ransomware
CPrivate -> target: save **CPrivateRSA.bin** on the target host machine
note left: **CPrivateRSA.bin**
loop
target -> AESKey: generate a random 256-Bit-AESKey and 128-Bit-AESIV with SALT
AESKey -> File: encrypt file with 256-Bit-AESKey & 128-Bit-AESIV and save with butterfly ending
note right: **~*.bfly**
'File -> AESKeySQL: save filepath, file hash and AESKey/AESIv pair in sql database

end

File->AESKey: Concatenate AESKey&AESIV to AESKeyPair
AESKey -> CPublic: encrypt AESKeyPair with **CPublic.pem**
CPublic -> target: save **AES.bin** on the target host machine
note left: **AES.bin**

'AESKeySQL -> CPublic: encrypt AESKeySQL.sql with **CPublic.pem**
'CPublic -> target: save AESKeySQL.bin on the host machine
'note left: **AESKeySQL.bin**
target -> target: display ransom payment note

@enduml